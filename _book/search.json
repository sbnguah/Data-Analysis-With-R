[
  {
    "objectID": "gr-densityplot.html",
    "href": "gr-densityplot.html",
    "title": "13  Density Plot",
    "section": "",
    "text": "13.0.1 Import dataset\n\n\nCode\nlibrary(tidyverse)\n\n\n\n\nCode\ndf_bp &lt;- \n    readstata13::read.dta13(\"C:/Dataset/BP.dta\") %&gt;% \n    select(sex, sbp, dbp, saltadd) %&gt;% \n    pivot_longer(\n        cols = c(sbp, dbp), \n        values_to = \"pressure\", \n        names_to = \"bp_type\")\n\ndataF &lt;- readstata13::read.dta13(\"C:/Dataset/olivia_data_wide.dta\")\n\n\n\n\n13.0.2 Primary density plot\n\n\nCode\ndf_bp %&gt;% \n    filter(bp_type == \"sbp\") %&gt;% \n    ggplot(aes(x = pressure)) +\n    geom_density(\n        color = \"blue\", \n        fill = 'red', \n        linetype = \"dashed\", \n        alpha = 0.2) +\n    theme_light()\n\n\n\n\n\n\n\n\nFigure 13.1: Density plot of the Systolic blood pressures\n\n\n\n\n\n\n\n13.0.3 Density with separate colors\n\n\nCode\ndf_bp %&gt;% \n    filter(bp_type == \"sbp\") %&gt;% \n    drop_na(saltadd) %&gt;% \n    ggplot(aes(x = pressure, color = saltadd, fill = saltadd)) +\n    geom_density(\n        linetype = \"dashed\", alpha = 0.2) +\n    theme_light()+\n    scale_color_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n\n\nFigure 13.2: Density plot of the Systolic blood pressures\n\n\n\n\n\n\n\n13.0.4 Densityplot with facets\n\n\nCode\ndf_bp %&gt;% \n    drop_na(saltadd) %&gt;% \n    ggplot(aes(x = pressure, color = saltadd)) +\n    geom_density(aes(fill = saltadd), linetype = \"dashed\", alpha = 0.2) +\n    theme_light()+\n    scale_color_brewer(palette = \"Dark2\") +\n    facet_grid(bp_type ~ sex)\n\n\n\n\n\n\n\n\nFigure 13.3: Density plot of the Systolic blood pressures\n\n\n\n\n\n\n\n13.0.5 ggridges plot\n\n\nCode\ndf_bp %&gt;% \n    drop_na(saltadd) %&gt;% \n    ggplot(aes(x = pressure, fill = bp_type)) +\n    ggridges::geom_density_ridges(aes(y = saltadd), alpha = .3) +\n    labs(x = \"Pressure\", \n         y = \"Salt added to diet\") +\n    ggridges::theme_ridges(font_size = 12) +\n    scale_fill_discrete(\n        name = \"Blood Pressure Type\", \n        labels = c(\"sbp\" = \"Systolic\", \"dbp\" = \"Diastolic\")) +\n    theme(legend.position = \"right\")\n\n\nPicking joint bandwidth of 11.5\n\n\n\n\n\n\n\n\nFigure 13.4: Comparative Systolic and Diastolic Blood Pressue for salt addiotin and sex",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Density Plot</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html",
    "href": "pkg-gtsummary.html",
    "title": "9  gtsummary",
    "section": "",
    "text": "10 Reading in the data\nCode\ndf_cint_all &lt;- dget(\"C:/Dataset/cint_data_clean\")\ndf_mbu &lt;- readxl::read_xlsx(\"C:/Dataset/mbu.xlsx\")",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#table-1",
    "href": "pkg-gtsummary.html#table-1",
    "title": "9  gtsummary",
    "section": "14.1 Table 1",
    "text": "14.1 Table 1\n\n\nCode\ndf_cint %&gt;% \n    tbl_summary(\n        by = sex,                    # aggregate table by sex\n        missing_text = \"(Missing)\",  # Label missing data as such\n        type = sbp ~ \"continuous2\",  # Report sbp with 2 or more statistics\n        statistic = list(sbp ~ c(\"{mean},({sd})\",\n                                 \"({min},{max})\"),\n                         bmicat ~ \"{n}/{N} ({p}%)\",\n                         bulb_0 ~ c(\"{mean} ({sd})\")),\n        label = bmi ~ \"BMI (Kg/m sq.)\",   # To modify labels\n        digits = dbp ~ 1) %&gt;%         # Force dbp to have one decimal\n    add_overall(last = T) %&gt;%           # Add overall column\n    modify_spanning_header(all_stat_cols() ~ \"**Sex of Participants**\") %&gt;% \n    add_p(pvalue_fun = ~ gtsummary::style_pvalue(.x, digits = 3)) %&gt;%    # Adds p-value column\n    add_q(method = \"fdr\",                   #Add p-value for multiple comparison\n          pvalue_fun = ~ gtsummary::style_pvalue(.x, digits = 3)) %&gt;% \n    add_stat_label() %&gt;%        # Add specific stats to each variable\n    add_n() %&gt;%                     # Add valid observation to each variable\n    bold_p() %&gt;%       # Bold significant p-values\n    add_significance_stars()   # add significance stars\n\n\nadd_q: Adjusting p-values with\n`stats::p.adjust(x$table_body$p.value, method = \"fdr\")`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nSex of Participants\np-value1\nq-value2\n\n\nFemale, N = 554\nMale, N = 158\nOverall, N = 712\n\n\n\n\nBulb diameter at time 0, Mean (SD)\n712\n0.90 (0.22)\n0.93 (0.20)\n0.91 (0.22)\n0.035*\n0.082\n\n\nBulb diameter at 12 months, Median (IQR)\n363\n0.83 (0.70, 0.95)\n0.85 (0.68, 0.96)\n0.83 (0.70, 0.95)\n0.683\n0.683\n\n\n    (Missing)\n\n\n262\n87\n349\n\n\n\n\n\n\nBMI (Kg/m sq.), Median (IQR)\n712\n27.1 (23.2, 31.2)\n23.0 (21.0, 25.6)\n26.1 (22.4, 30.1)\n&lt;0.001***\n&lt;0.001\n\n\nSystolic Blood Pressure\n712\n\n\n\n\n\n\n0.242\n0.423\n\n\n    Mean,(SD)\n\n\n125,(24)\n127,(24)\n125,(24)\n\n\n\n\n\n\n    (Minimum,Maximum)\n\n\n(66,231)\n(82,199)\n(66,231)\n\n\n\n\n\n\nDiastolic Blood Pressure, Median (IQR)\n712\n79.0 (70.0, 88.0)\n78.0 (69.0, 90.0)\n79.0 (70.0, 89.0)\n0.563\n0.657\n\n\nCategorized BMI, n/N (%)\n711\n\n\n\n\n\n\n&lt;0.001***\n&lt;0.001\n\n\n    Normal\n\n\n208/553 (38%)\n110/158 (70%)\n318/711 (45%)\n\n\n\n\n\n\n    High\n\n\n345/553 (62%)\n48/158 (30%)\n393/711 (55%)\n\n\n\n\n\n\n    (Missing)\n\n\n1\n0\n1\n\n\n\n\n\n\nHypertension present, n (%)\n712\n314 (57%)\n95 (60%)\n409 (57%)\n0.439\n0.615\n\n\n\n1 *p&lt;0.05; **p&lt;0.01; ***p&lt;0.001\n\n\n2 False discovery rate correction for multiple testing",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#table-2",
    "href": "pkg-gtsummary.html#table-2",
    "title": "9  gtsummary",
    "section": "14.2 Table 2",
    "text": "14.2 Table 2\n\n\nCode\ndf_mbu_clean %&gt;% \n    tbl_summary(by = died) %&gt;% \n    add_overall(last = T) %&gt;%\n    add_p() %&gt;% \n    modify_spanning_header(all_stat_cols() ~ \"**Mortality**\") %&gt;% \n    modify_caption(caption = \"**Table 2**: MBU data by outcome\") %&gt;% \n    bold_labels()\n\n\n\n\n\n\nTable 2: MBU data by outcome\n\n\n\n\n\n\n\n\n\nCharacteristic\nMortality\np-value2\n\n\nNo, N = 4,2571\nYes, N = 7271\nOverall, N = 4,9841\n\n\n\n\nWeight (kgs)\n2.80 (2.00, 3.30)\n1.60 (1.10, 2.70)\n2.70 (1.90, 3.30)\n&lt;0.001\n\n\nAge (days)\n0.00 (0.00, 1.00)\n0.00 (0.00, 1.00)\n0.00 (0.00, 1.00)\n0.008\n\n\nSex\n\n\n\n\n\n\n0.6\n\n\n    Female\n1,887 (44%)\n329 (45%)\n2,216 (44%)\n\n\n\n\n    Male\n2,370 (56%)\n398 (55%)\n2,768 (56%)\n\n\n\n\nPlace of birth\n\n\n\n\n\n\n&lt;0.001\n\n\n    Clinic/Hospital\n601 (14%)\n195 (27%)\n796 (16%)\n\n\n\n\n    Home\n55 (1.3%)\n9 (1.2%)\n64 (1.3%)\n\n\n\n\n    KATH\n3,594 (84%)\n520 (72%)\n4,114 (83%)\n\n\n\n\n    Maternity Home\n7 (0.2%)\n3 (0.4%)\n10 (0.2%)\n\n\n\n\nAPGAR (min 1)\n6.00 (4.00, 7.00)\n4.00 (2.00, 6.00)\n6.00 (4.00, 7.00)\n&lt;0.001\n\n\nMode of delivery\n\n\n\n\n\n\n&lt;0.001\n\n\n    C/S\n2,344 (55%)\n318 (44%)\n2,662 (53%)\n\n\n\n\n    SVD\n1,790 (42%)\n398 (55%)\n2,188 (44%)\n\n\n\n\n    Vacuum\n123 (2.9%)\n11 (1.5%)\n134 (2.7%)\n\n\n\n\nGestational Age\n38.0 (35.0, 40.0)\n34.0 (29.0, 39.0)\n38.0 (34.0, 40.0)\n&lt;0.001\n\n\nAPGAR (min 5)\n8.00 (7.00, 9.00)\n6.00 (5.00, 7.00)\n8.00 (7.00, 9.00)\n&lt;0.001\n\n\nAdmission duration\n5 (3, 8)\n1 (0, 4)\n5 (2, 8)\n&lt;0.001\n\n\n\n1 Median (IQR); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test; Fisher’s exact test",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#table-3",
    "href": "pkg-gtsummary.html#table-3",
    "title": "9  gtsummary",
    "section": "14.3 Table 3",
    "text": "14.3 Table 3\nThis is table 3 of many😉\n1\n\n\nCode\ndf_cint %&gt;% \n    tbl_summary(\n        by = sex,                    # aggregate table by sex\n        statistic = all_continuous() ~ \"{mean} ({sd})\") %&gt;% # Stats touse for all continuous variables\n    add_stat_label(label = all_continuous()~ \"Mean(StD)\") %&gt;% # Label to give statistics\n    add_difference() %&gt;%    # Add a difeference, ci and p-value column\n    modify_spanning_header(all_stat_cols()~ \"**Sex**\") %&gt;%  # Add spanning header\n    modify_caption(\"**Table 1. Patient Characteristics**\") %&gt;% # Add table title\n    italicize_levels() %&gt;%  # Italics for the levels\n    bold_labels()   # Bold fo rhe labels\n\n\n\n\n\n\nTable 1. Patient Characteristics\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nSex\nDifference1\n95% CI1,2\np-value1\n\n\nFemale, N = 554\nMale, N = 158\n\n\n\n\nBulb diameter at time 0, Mean(StD)\n0.90 (0.22)\n0.93 (0.20)\n-0.03\n-0.07, 0.01\n0.095\n\n\nBulb diameter at 12 months, Mean(StD)\n0.85 (0.23)\n0.87 (0.29)\n-0.02\n-0.10, 0.05\n0.5\n\n\n    Unknown\n262\n87\n\n\n\n\n\n\n\n\nBody Mass Index, Mean(StD)\n27.4 (5.7)\n23.7 (4.0)\n3.7\n3.0, 4.5\n&lt;0.001\n\n\nSystolic Blood Pressure, Mean(StD)\n125 (24)\n127 (24)\n-2.5\n-6.8, 1.8\n0.3\n\n\nDiastolic Blood Pressure, Mean(StD)\n80 (14)\n79 (15)\n0.35\n-2.3, 3.0\n0.8\n\n\nCategorized BMI, n (%)\n\n\n\n\n0.68\n0.50, 0.86\n\n\n\n\n    Normal\n208 (38%)\n110 (70%)\n\n\n\n\n\n\n\n\n    High\n345 (62%)\n48 (30%)\n\n\n\n\n\n\n\n\n    Unknown\n1\n0\n\n\n\n\n\n\n\n\nHypertension present, n (%)\n314 (57%)\n95 (60%)\n-3.4%\n-13%, 5.6%\n0.5\n\n\n\n1 Welch Two Sample t-test; Standardized Mean Difference; Two sample test for equality of proportions\n\n\n2 CI = Confidence Interval",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#stratified-table",
    "href": "pkg-gtsummary.html#stratified-table",
    "title": "9  gtsummary",
    "section": "14.4 Stratified table",
    "text": "14.4 Stratified table\n\n\nCode\ndf_cint %&gt;% \n    drop_na(bmicat) %&gt;% \n    tbl_strata(\n        strata = bmicat, ~.x %&gt;%      # Add a strata to the table\n            tbl_summary(\n                by = sex\n            ) %&gt;% \n            add_p()      # P value for each strata\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nNormal\nHigh\n\n\nFemale, N = 2081\nMale, N = 1101\np-value2\nFemale, N = 3451\nMale, N = 481\np-value2\n\n\n\n\nBulb diameter at time 0\n0.85 (0.75, 0.98)\n0.88 (0.78, 1.03)\n0.074\n0.85 (0.75, 1.03)\n0.91 (0.80, 1.05)\n0.13\n\n\nBulb diameter at 12 months\n0.80 (0.70, 0.89)\n0.84 (0.68, 0.97)\n0.2\n0.85 (0.70, 0.95)\n0.88 (0.68, 0.95)\n0.9\n\n\n    Unknown\n97\n60\n\n\n164\n27\n\n\n\n\nBody Mass Index\n22.22 (20.15, 23.50)\n21.85 (20.34, 23.10)\n0.4\n29.8 (27.5, 33.3)\n27.0 (26.0, 30.9)\n&lt;0.001\n\n\nSystolic Blood Pressure\n118 (100, 132)\n120 (107, 132)\n0.3\n123 (111, 140)\n136 (122, 157)\n&lt;0.001\n\n\nDiastolic Blood Pressure\n76 (67, 84)\n74 (66, 84)\n0.7\n80 (71, 90)\n85 (77, 95)\n0.035\n\n\nHypertension present\n97 (47%)\n57 (52%)\n0.4\n216 (63%)\n38 (79%)\n0.025\n\n\n\n1 Median (IQR); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#specifying-tables-tests",
    "href": "pkg-gtsummary.html#specifying-tables-tests",
    "title": "9  gtsummary",
    "section": "14.5 Specifying tables tests",
    "text": "14.5 Specifying tables tests\n\n\nCode\ndf_cint %&gt;% \n    tbl_summary(by = sex,\n                statistic = list(all_continuous() ~ \"{mean} ({sd})\")\n    ) %&gt;% \n    add_p(\n        test = list(\n            all_continuous()~ \"t.test\",     # Specify T test for all continuous variables\n            all_categorical() ~ \"fisher.test\"     # Specify fisher's text for all categorical variables\n        )\n    ) %&gt;% \n    separate_p_footnotes()     # Specific p-value labelled\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nFemale, N = 5541\nMale, N = 1581\np-value\n\n\n\n\nBulb diameter at time 0\n0.90 (0.22)\n0.93 (0.20)\n0.0952\n\n\nBulb diameter at 12 months\n0.85 (0.23)\n0.87 (0.29)\n0.52\n\n\n    Unknown\n262\n87\n\n\n\n\nBody Mass Index\n27.4 (5.7)\n23.7 (4.0)\n&lt;0.0012\n\n\nSystolic Blood Pressure\n125 (24)\n127 (24)\n0.32\n\n\nDiastolic Blood Pressure\n80 (14)\n79 (15)\n0.82\n\n\nCategorized BMI\n\n\n\n\n&lt;0.0013\n\n\n    Normal\n208 (38%)\n110 (70%)\n\n\n\n\n    High\n345 (62%)\n48 (30%)\n\n\n\n\n    Unknown\n1\n0\n\n\n\n\nHypertension present\n314 (57%)\n95 (60%)\n0.53\n\n\n\n1 Mean (SD); n (%)\n\n\n2 Welch Two Sample t-test\n\n\n3 Fisher’s exact test",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#customised-tables",
    "href": "pkg-gtsummary.html#customised-tables",
    "title": "9  gtsummary",
    "section": "14.6 Customised tables",
    "text": "14.6 Customised tables\n\n\nCode\ndf_cint %&gt;% \n    select(bmi, hpt, bulb_0, sbp, bmicat) %&gt;% \n    tbl_summary(\n        by = hpt,\n        statistic = list(\n            bmi ~ \"{mean} ({sd})\",\n            all_categorical() ~ \"{n} ({p})\",\n            sbp ~ \"{median} ({p25}, {p75})\",\n            bulb_0 ~ \"{mean} ({sd})\"),\n         missing_text = \"(Missing\",\n        digits = list(all_categorical() ~ c(0, 1))\n    ) %&gt;% \n    add_stat_label(label = list(\n        bmi = \"Mean(SD)\",\n        bulb_0 = \"Mean(SD)\",\n        all_categorical() ~ \"n(%)\",\n        sbp = \"Median(IQR)\"\n    )) %&gt;% \n    add_p(\n        test = list(\n            bmi ~ \"t.test\",\n            bulb_0 ~ \"t.test\",\n            all_categorical() ~ \"fisher.test\",\n            sbp ~ \"wilcox.test\"\n        )\n    ) %&gt;% \n    separate_p_footnotes()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nNo, N = 303\nYes, N = 409\np-value\n\n\n\n\nBody Mass Index, Mean(SD)\n25.3 (5.4)\n27.5 (5.5)\n&lt;0.0011\n\n\nBulb diameter at time 0, Mean(SD)\n0.88 (0.22)\n0.92 (0.22)\n0.0131\n\n\nSystolic Blood Pressure, Median(IQR)\n108 (98, 113)\n134 (125, 150)\n&lt;0.0012\n\n\nCategorized BMI, n(%)\n\n\n\n\n&lt;0.0013\n\n\n    Normal\n164 (54.1)\n154 (37.7)\n\n\n\n\n    High\n139 (45.9)\n254 (62.3)\n\n\n\n\n    (Missing\n0\n1\n\n\n\n\n\n1 Welch Two Sample t-test\n\n\n2 Wilcoxon rank sum test\n\n\n3 Fisher’s exact test",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#creating-data-for-the-paired-table",
    "href": "pkg-gtsummary.html#creating-data-for-the-paired-table",
    "title": "9  gtsummary",
    "section": "14.7 Creating data for the paired table",
    "text": "14.7 Creating data for the paired table\n\n\nCode\ndf_paired_cint &lt;- \n    df_cint_all %&gt;% \n    select(sid, cart, cca_0, cca_12, ica_0, ica_12) %&gt;%\n    mutate(\n        ica_12 = case_when(ica_12 &gt; median(ica_12, na.rm=T) ~ \"High\",\n                               ica_12 &lt;= median(ica_12, na.rm=T) ~ \"Low\") %&gt;% \n            factor(),\n        ica_0 = case_when(ica_0 &gt; median(ica_0, na.rm=T) ~ \"High\",\n                               ica_0 &lt;= median(ica_0, na.rm=T) ~ \"Low\") %&gt;% \n            factor()\n    ) %&gt;% \n    select(sid, cart, cca_0, cca_12, ica_0, ica_12)\n\ndf_A &lt;-\n    df_paired_cint %&gt;% \n    pivot_longer(cols =  c(cca_0, cca_12), \n                 names_to = c(\"cca\", \"period\"), \n                 names_sep = \"_\", \n                 values_to  = \"cca_measure\") %&gt;% \n    select(sid, cart, period, cca_measure)\n\ndf_paired_long &lt;-\n    df_paired_cint %&gt;%\n    pivot_longer(cols =  c(ica_0, ica_12), \n                 names_to = c(\"ica\", \"period\"), \n                 names_sep = \"_\", \n                 values_to  = \"ica_measure\") %&gt;% \n    select(sid, cart, period, ica_measure) %&gt;% \n    full_join(df_A, by = c(\"sid\", \"period\", \"cart\"))",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#paired-table",
    "href": "pkg-gtsummary.html#paired-table",
    "title": "9  gtsummary",
    "section": "14.8 Paired table",
    "text": "14.8 Paired table\n\n\nCode\ndf_paired_long %&gt;% \n    mutate(period = case_when(period == \"0\" ~ \"Month 0\",\n                              period == \"12\" ~ \"Month 12\")) %&gt;% \n    filter(complete.cases(.)) %&gt;% \n    group_by(sid) %&gt;% \n    filter(n()==2) %&gt;% \n    ungroup() %&gt;%\n    tbl_strata(strata = cart, ~.x %&gt;%\n        tbl_summary(by = period, \n                    include = -sid,\n                    statistic = list(cca_measure ~ \"{mean} ({sd})\",\n                                     ica_measure ~ \"{n} ({p})\"),\n                    label = list(ica_measure = \"ICA\",\n                                 cca_measure = \"CCA(mm)\"),\n                    digits = list(all_categorical() ~ c(0, 1)))%&gt;% \n            add_p(test = list(ica_measure ~ \"mcnemar.test\",\n                              cca_measure ~ \"paired.t.test\"),\n                              group = sid,\n                  pvalue_fun = ~ gtsummary::style_pvalue(.x, digits = 3)) %&gt;% \n            separate_p_footnotes() %&gt;% \n            add_stat_label(label = list(ica_measure = \"n(%)\",\n                                        cca_measure = \"mean(SD)\"))\n    ) %&gt;% \n    modify_caption(\"**Table 2: Comparative month 0 and 12 measures**\")\n\n\n\n\n\n\nTable 2: Comparative month 0 and 12 measures\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nNaive\ncART\nCONTROL\n\n\nMonth 0, N = 86\nMonth 12, N = 86\np-value\nMonth 0, N = 237\nMonth 12, N = 237\np-value\nMonth 0, N = 40\nMonth 12, N = 40\np-value\n\n\n\n\nICA, n(%)\n\n\n\n\n0.7281\n\n\n\n\n0.7591\n\n\n\n\n0.0021\n\n\n    High\n32 (37.2)\n29 (33.7)\n\n\n154 (65.0)\n150 (63.3)\n\n\n14 (35.0)\n1 (2.5)\n\n\n\n\n    Low\n54 (62.8)\n57 (66.3)\n\n\n83 (35.0)\n87 (36.7)\n\n\n26 (65.0)\n39 (97.5)\n\n\n\n\nCCA(mm), mean(SD)\n0.83 (0.13)\n0.77 (0.14)\n0.0022\n0.93 (0.17)\n0.88 (0.16)\n&lt;0.0012\n0.84 (0.13)\n0.70 (0.11)\n&lt;0.0012\n\n\n\n1 McNemar’s Chi-squared test with continuity correction\n\n\n2 Paired t-test",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#multivariate-regression",
    "href": "pkg-gtsummary.html#multivariate-regression",
    "title": "9  gtsummary",
    "section": "16.1 Multivariate regression",
    "text": "16.1 Multivariate regression\n\n16.1.1 Multiple liner regreession\n\n\nCode\ndf_cint %&gt;% \n    lm(sbp ~ ., data = .) %&gt;% \n    tbl_regression(pvalue_fun = function(x) style_pvalue(x, digits = 3)) %&gt;% \n    modify_header(update = list(estimate ~ \"**Estimate**\",\n                                label ~ \"**Variable**\")) %&gt;% \n    modify_caption(caption = \"**Table XI:** Multivariate linear regression\") %&gt;%\n    bold_labels() %&gt;% \n    as_gt() %&gt;% \n    gt::tab_options(\n        table.font.size = 14,\n        table.font.names = \"Times New Roman\",\n        data_row.padding = 1\n    ) \n\n\n\n\n\n\nTable XI: Multivariate linear regression\n\n\n\n\n\n\n\n\nVariable\nEstimate\n95% CI1\np-value\n\n\n\n\nSex\n\n\n\n\n\n\n\n\n    Female\n—\n—\n\n\n\n\n    Male\n-0.25\n-3.6, 3.1\n0.883\n\n\nBulb diameter at time 0\n4.6\n-1.2, 10\n0.122\n\n\nBulb diameter at 12 months\n7.4\n1.7, 13\n0.011\n\n\nBody Mass Index\n0.05\n-0.32, 0.43\n0.781\n\n\nDiastolic Blood Pressure\n0.92\n0.79, 1.0\n&lt;0.001\n\n\nCategorized BMI\n\n\n\n\n\n\n\n\n    Normal\n—\n—\n\n\n\n\n    High\n0.19\n-4.0, 4.3\n0.930\n\n\nHypertension present\n\n\n\n\n\n\n\n\n    No\n—\n—\n\n\n\n\n    Yes\n17\n13, 20\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\n16.1.2 Multiple variable logistic regression\n\n\nCode\ndf_mbu_clean %&gt;% \n    glm(died ~ ., data = ., family = binomial) %&gt;% \n    tbl_regression(exponentiate = T, include = -dura_adm) %&gt;% \n    add_n(location = \"level\") %&gt;% \n    add_nevent(location = \"level\") %&gt;% \n    add_global_p() %&gt;% \n    add_q() %&gt;% \n    add_significance_stars(\n        hide_p = FALSE,\n        hide_ci = FALSE,\n        hide_se = TRUE\n    ) %&gt;% \n    add_vif() %&gt;% \n    modify_header(label = \"**Predictor**\") %&gt;% \n    modify_caption(caption = \"**Table 5: Highly customised logistic regression**\") %&gt;% \n    modify_footnote(ci = \"CI = My 95%CI\", abbreviation = TRUE) %&gt;% \n    sort_p() %&gt;% \n    bold_p(t=0.1, q=TRUE) %&gt;% \n    bold_labels() %&gt;% \n    italicize_levels()\n\n\nadd_q: Adjusting p-values with\n`stats::p.adjust(x$table_body$p.value, method = \"fdr\")`\n\n\n\n\n\n\nTable 5: Highly customised logistic regression\n\n\n\n\n\n\n\n\n\n\n\n\n\nPredictor\nN\nEvent N\nOR1,2\n95% CI2\np-value\nq-value3\nGVIF2\nAdjusted GVIF4,2\n\n\n\n\nAPGAR (min 5)\n4,984\n727\n0.55***\n0.49, 0.61\n&lt;0.001\n&lt;0.001\n3.8\n2.0\n\n\nWeight (kgs)\n4,984\n727\n0.42***\n0.35, 0.52\n&lt;0.001\n&lt;0.001\n2.7\n1.6\n\n\nPlace of birth\n\n\n\n\nNA***\n\n\n&lt;0.001\n&lt;0.001\n1.1\n1.0\n\n\n    Clinic/Hospital\n796\n195\n—\n—\n\n\n\n\n\n\n\n\n\n\n    Home\n64\n9\n0.64\n0.25, 1.47\n\n\n\n\n\n\n\n\n\n\n    KATH\n4,114\n520\n0.50\n0.39, 0.63\n\n\n\n\n\n\n\n\n\n\n    Maternity Home\n10\n3\n2.76\n0.47, 13.5\n\n\n\n\n\n\n\n\n\n\nGestational Age\n4,984\n727\n0.91***\n0.87, 0.94\n&lt;0.001\n&lt;0.001\n2.7\n1.6\n\n\nAge (days)\n4,984\n727\n1.05\n1.00, 1.09\n0.059\n0.095\n1.0\n1.0\n\n\nMode of delivery\n\n\n\n\nNA\n\n\n0.12\n0.2\n1.2\n1.0\n\n\n    C/S\n2,662\n318\n—\n—\n\n\n\n\n\n\n\n\n\n\n    SVD\n2,188\n398\n0.80\n0.65, 0.99\n\n\n\n\n\n\n\n\n\n\n    Vacuum\n134\n11\n0.93\n0.43, 1.82\n\n\n\n\n\n\n\n\n\n\nSex\n\n\n\n\nNA\n\n\n0.3\n0.4\n1.0\n1.0\n\n\n    Female\n2,216\n329\n—\n—\n\n\n\n\n\n\n\n\n\n\n    Male\n2,768\n398\n1.11\n0.91, 1.36\n\n\n\n\n\n\n\n\n\n\nAPGAR (min 1)\n4,984\n727\n1.00\n0.91, 1.10\n&gt;0.9\n&gt;0.9\n4.0\n2.0\n\n\n\n1 *p&lt;0.05; **p&lt;0.01; ***p&lt;0.001\n\n\n2 OR = Odds Ratio, CI = My 95%CI, GVIF = Generalized Variance Inflation Factor\n\n\n3 False discovery rate correction for multiple testing\n\n\n4 GVIF^[1/(2*df)]\n\n\n\n\n\n\n\n\n\n\n16.1.3 Cox proportional hazard regression\n\n\nCode\ndf_mbu_clean %&gt;% \n    coxph(Surv(dura_adm, died == \"Yes\")~., data = .) %&gt;% \n    tbl_regression(exponentiate = T)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR1\n95% CI1\np-value\n\n\n\n\nWeight (kgs)\n0.63\n0.54, 0.74\n&lt;0.001\n\n\nAge (days)\n1.04\n1.01, 1.07\n0.021\n\n\nSex\n\n\n\n\n\n\n\n\n    Female\n—\n—\n\n\n\n\n    Male\n1.11\n0.95, 1.28\n0.2\n\n\nPlace of birth\n\n\n\n\n\n\n\n\n    Clinic/Hospital\n—\n—\n\n\n\n\n    Home\n0.55\n0.28, 1.08\n0.083\n\n\n    KATH\n0.66\n0.55, 0.78\n&lt;0.001\n\n\n    Maternity Home\n1.08\n0.34, 3.39\n0.9\n\n\nAPGAR (min 1)\n0.96\n0.90, 1.03\n0.3\n\n\nMode of delivery\n\n\n\n\n\n\n\n\n    C/S\n—\n—\n\n\n\n\n    SVD\n0.77\n0.66, 0.90\n0.001\n\n\n    Vacuum\n0.96\n0.52, 1.77\n&gt;0.9\n\n\nGestational Age\n0.97\n0.94, 1.00\n0.031\n\n\nAPGAR (min 5)\n0.68\n0.64, 0.74\n&lt;0.001\n\n\n\n1 HR = Hazard Ratio, CI = Confidence Interval",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#merging",
    "href": "pkg-gtsummary.html#merging",
    "title": "9  gtsummary",
    "section": "17.1 Merging",
    "text": "17.1 Merging",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#stacking",
    "href": "pkg-gtsummary.html#stacking",
    "title": "9  gtsummary",
    "section": "17.2 Stacking",
    "text": "17.2 Stacking",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#multiple-comparison-table",
    "href": "pkg-gtsummary.html#multiple-comparison-table",
    "title": "9  gtsummary",
    "section": "17.3 Multiple comparison table",
    "text": "17.3 Multiple comparison table\n\n\nCode\nlibrary(titanic)\nlibrary(plotrix) #has a std.error function\n\n# create smaller version of the dataset\ndf &lt;- \n  titanic_train %&gt;%\n  select(Sex, Embarked, Age, Fare) %&gt;%\n  filter(Embarked != \"\") # deleting empty Embarked status\n\n# first, write a little function to get the 2-way ANOVA p-values in a table\n# function to get 2-way ANOVA p-values in tibble\ntwoway_p &lt;- function(variable) {\n  paste(variable, \"~ Sex * Embarked\") %&gt;%\n    as.formula() %&gt;%\n    aov(data = df) %&gt;% \n    broom::tidy() %&gt;%\n    select(term, p.value) %&gt;%\n    filter(complete.cases(.)) %&gt;%\n    pivot_wider(names_from = term, values_from = p.value) %&gt;%\n    mutate(\n      variable = .env$variable,\n      row_type = \"label\"\n    )\n}\n\n# add all results to a single table (will be merged with gtsummary table in next step)\ntwoway_results &lt;-\n  bind_rows(\n    twoway_p(\"Age\"),\n    twoway_p(\"Fare\")\n  )\ntwoway_results\n\n\n# A tibble: 2 × 5\n           Sex Embarked `Sex:Embarked` variable row_type\n         &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   \n1 0.00823      3.97e- 1         0.611  Age      label   \n2 0.0000000191 4.27e-16         0.0958 Fare     label   \n\n\nCode\ntbl &lt;-\n  # first build a stratified `tbl_summary()` table to get summary stats by two variables\n  df %&gt;%\n  tbl_strata(\n    strata =  Sex,\n    .tbl_fun =\n      ~.x %&gt;%\n      tbl_summary(\n        by = Embarked,\n        missing = \"no\",\n        statistic = all_continuous() ~ \"{mean} ({std.error})\",\n        digits = everything() ~ 1\n      ) %&gt;%\n      modify_header(all_stat_cols() ~ \"**{level}**\")\n  ) %&gt;%\n  # merge the 2way ANOVA results into tbl_summary table\n  modify_table_body(\n    ~.x %&gt;%\n      left_join(\n        twoway_results,\n        by = c(\"variable\", \"row_type\")\n      )\n  ) %&gt;%\n  # by default the new columns are hidden, add a header to unhide them\n  modify_header(list(\n    Sex ~ \"**Sex**\", \n    Embarked ~ \"**Embarked**\", \n    `Sex:Embarked` ~ \"**Sex * Embarked**\"\n  )) %&gt;%\n  # adding spanning header to analysis results\n  modify_spanning_header(c(Sex, Embarked, `Sex:Embarked`) ~ \"**Two-way ANOVA p-values**\") %&gt;%\n  # format the p-values with a pvalue formatting function\n  modify_fmt_fun(c(Sex, Embarked, `Sex:Embarked`) ~ style_pvalue) %&gt;%\n  # update the footnote to be nicer looking\n  modify_footnote(all_stat_cols() ~ \"Mean (SE)\")",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#references",
    "href": "pkg-gtsummary.html#references",
    "title": "9  gtsummary",
    "section": "18.1 References",
    "text": "18.1 References",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-gtsummary.html#footnotes",
    "href": "pkg-gtsummary.html#footnotes",
    "title": "9  gtsummary",
    "section": "",
    "text": "Need to insert this k3k3↩︎",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>`gtsummary`</span>"
    ]
  },
  {
    "objectID": "pkg-nlme.html",
    "href": "pkg-nlme.html",
    "title": "10  nlme",
    "section": "",
    "text": "Code\ncint &lt;- dget(\"C:/Dataset/cint_data_11042021\")\n\n\nSince this is a large dataset we start off by selecting the variables we need, convert it to the long format, and generate the “Time” variable\n\n\nCode\ndf &lt;-\n    cint %&gt;% \n    select(\n        sid, cca_0, cca_12, sex, ageyrs, resid, physical, \n        hpt_old, cart) %&gt;% \n    gather(period, cca, cca_0:cca_12) %&gt;% \n    mutate(\n        Time = ifelse(\n            period == \"cca_0\", 0, \n            ifelse(period == \"cca_12\", 1, NA)))\n\n\nHere we begin to pick up abnormal or suspicious data escpecially in the cca. One way is to determine the changes with time\n\n\nCode\ndf2 &lt;- \n    df %&gt;% \n    arrange(sid, period) %&gt;%\n    group_by(sid) %&gt;% \n    mutate(\n        cca_prev = lag(cca, order_by = sid),\n        cca_diff = cca - cca_prev) \n\ndf2 %&gt;% \n    arrange(sid, period) %&gt;% \n    head(10) %&gt;% \n    kableExtra::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsid\nsex\nageyrs\nresid\nphysical\nhpt_old\ncart\nperiod\ncca\nTime\ncca_prev\ncca_diff\n\n\n\n\n1\nFemale\n58\nUrban\nYes\nNo\nNaive\ncca_0\n0.925\n0\nNA\nNA\n\n\n1\nFemale\n58\nUrban\nYes\nNo\nNaive\ncca_12\n1.000\n1\n0.925\n0.075\n\n\n2\nFemale\n48\nUrban\nYes\nNo\nNaive\ncca_0\n0.975\n0\nNA\nNA\n\n\n2\nFemale\n48\nUrban\nYes\nNo\nNaive\ncca_12\n0.700\n1\n0.975\n-0.275\n\n\n3\nFemale\n40\nUrban\nYes\nNo\ncART\ncca_0\n0.850\n0\nNA\nNA\n\n\n3\nFemale\n40\nUrban\nYes\nNo\ncART\ncca_12\n0.925\n1\n0.850\n0.075\n\n\n4\nMale\n38\nUrban\nNo\nNo\nNaive\ncca_0\n0.875\n0\nNA\nNA\n\n\n4\nMale\n38\nUrban\nNo\nNo\nNaive\ncca_12\n0.750\n1\n0.875\n-0.125\n\n\n5\nFemale\n49\nUrban\nNo\nYes\ncART\ncca_0\n1.600\n0\nNA\nNA\n\n\n5\nFemale\n49\nUrban\nNo\nYes\ncART\ncca_12\n1.225\n1\n1.600\n-0.375\n\n\n\n\n\nAnd then plot the differences\n\n\nCode\ndf2 %&gt;% \n    na.omit() %&gt;% \n    ggplot(aes(x = cca_diff)) +\n    geom_boxplot()\n\n\n\n\n\n\n\n\n\nComment: Generally there was decrease in the cca values over the two time periods. Next we summarise and visualise the data\n\n\nCode\ndf %&gt;% \n    na.omit() %&gt;% \n    ggplot(aes(x = Time, y = cca, group = sid))+\n    geom_jitter(show.legend = F, width = .01) +\n    stat_smooth(\n        formula = y ~x, \n        method = \"lm\", \n        se = FALSE, \n        col = \"grey\") +\n    theme_light()\n\n\n\n\n\n\n\n\n\nNext the UNCONDITIONAL NULL MODEL to evaluate clustering, thereby finding out if we need to even do multilevel analysis\n\n\nCode\nn0 &lt;- \n    nlme::gls(\n        cca ~ 1, data = df, na.action = na.omit, method = \"ML\")\n\nn0 %&gt;% \n    broom.mixed::tidy(conf.int=T) %&gt;% \n    kableExtra::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n0.8520116\n0.004918\n173.2448\n0\n0.8423726\n0.8616507\n\n\n\n\n\n\n\nCode\nn1 &lt;- \n    nlme::lme(\n        cca ~ 1, random = ~ 1 | sid, \n        data = df, na.action = na.omit, method = \"ML\")\n\nn0 %&gt;% broom.mixed::tidy(conf.int=T) %&gt;% kableExtra::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n0.8520116\n0.004918\n173.2448\n0\n0.8423726\n0.8616507\n\n\n\n\n\n\n\nCode\nn1 %&gt;% reghelper::ICC()\n\n\n[1] 0.3150857\n\n\nCode\nanova(n0, n1)\n\n\n   Model df       AIC       BIC   logLik   Test  L.Ratio p-value\nn0     1  2 -869.6521 -859.6919 436.8260                        \nn1     2  3 -909.9268 -894.9866 457.9634 1 vs 2 42.27476  &lt;.0001\n\n\nSince ICC &gt; 0.05 and also the random effects CI does not include 0 there exist significant clustering to suggest we do multilevel modeling. Next we test the UNCONDITIONAL SLOPE MODEL using the FIXED slope\n\n\nCode\nn2 &lt;- \n    nlme::lme(\n        cca ~ Time, random = ~ 1 | sid, \n        data = df, \n        na.action = na.omit, \n        method = \"ML\")\n\nn2 %&gt;% \n    broom.mixed::tidy(conf.int=T) %&gt;% \n    kableExtra::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\neffect\ngroup\nterm\nestimate\nstd.error\ndf\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\nfixed\nNA\n(Intercept)\n0.8629565\n0.0060113\n711\n143.554679\n0e+00\n0.8511653\n0.8747476\n\n\nfixed\nNA\nTime\n-0.0447315\n0.0086710\n362\n-5.158735\n4e-07\n-0.0617676\n-0.0276955\n\n\nran_pars\nsid\nsd_(Intercept)\n0.0979221\nNA\nNA\nNA\nNA\n0.0857260\n0.1118532\n\n\nran_pars\nResidual\nsd_Observation\n0.1268559\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\nCode\nn2 %&gt;% reghelper::ICC()\n\n\n[1] 0.3733763\n\n\nCode\nanova(n0, n1, n2)\n\n\n   Model df       AIC       BIC   logLik   Test  L.Ratio p-value\nn0     1  2 -869.6521 -859.6919 436.8260                        \nn1     2  3 -909.9268 -894.9866 457.9634 1 vs 2 42.27476  &lt;.0001\nn2     3  4 -932.4301 -912.5098 470.2150 2 vs 3 24.50329  &lt;.0001\n\n\nNext we test the UNCONDITIONAL SLOPE MODEL using the RANDOM slope\n\n\nCode\nn3 &lt;- \n    nlme::lme(\n        cca ~ Time, \n        random = ~ Time | sid, \n        data = df, \n        na.action = na.omit, \n        method = \"ML\")\n\n\nn3 %&gt;% summary()\n\n\nLinear mixed-effects model fit by maximum likelihood\n  Data: df \n        AIC       BIC   logLik\n  -929.0894 -899.2089 470.5447\n\nRandom effects:\n Formula: ~Time | sid\n Structure: General positive-definite, Log-Cholesky parametrization\n            StdDev     Corr  \n(Intercept) 0.14902004 (Intr)\nTime        0.16324990 -0.51 \nResidual    0.05371762       \n\nFixed effects:  cca ~ Time \n                 Value   Std.Error  DF   t-value p-value\n(Intercept)  0.8629565 0.005942057 711 145.22857       0\nTime        -0.0452827 0.008766665 362  -5.16533       0\n Correlation: \n     (Intr)\nTime -0.413\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-0.85549105 -0.24307511 -0.02773692  0.23248407  1.46909846 \n\nNumber of Observations: 1075\nNumber of Groups: 712 \n\n\nCode\nn3 %&gt;% nlme::intervals(which = \"fixed\")\n\n\nApproximate 95% confidence intervals\n\n Fixed effects:\n                  lower        est.       upper\n(Intercept)  0.85130124  0.86295646  0.87461168\nTime        -0.06250667 -0.04528273 -0.02805879\n\n\nCode\nn3 %&gt;% reghelper::ICC()\n\n\n[1] 0.9442325\n\n\nCode\nanova(n0, n1, n2, n3)\n\n\n   Model df       AIC       BIC   logLik   Test  L.Ratio p-value\nn0     1  2 -869.6521 -859.6919 436.8260                        \nn1     2  3 -909.9268 -894.9866 457.9634 1 vs 2 42.27476  &lt;.0001\nn2     3  4 -932.4301 -912.5098 470.2150 2 vs 3 24.50329  &lt;.0001\nn3     4  6 -929.0894 -899.2089 470.5447 3 vs 4  0.65926  0.7192\n\n\nNext we test the FULL MODEL using the RANDOM slope\n\n\nCode\nn4 &lt;- \n    nlme::lme(\n        cca ~ Time + hpt_old + sex + scale(ageyrs) + cart, \n        random = ~ 1 | sid, \n        data = df, \n        method = \"ML\", \n        na.action = na.omit)\n\nn4 %&gt;% \n    broom.mixed::tidy() %&gt;% \n    kableExtra::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\neffect\ngroup\nterm\nestimate\nstd.error\ndf\nstatistic\np.value\n\n\n\n\nfixed\nNA\n(Intercept)\n0.8224719\n0.0101076\n706\n81.371922\n0.0000000\n\n\nfixed\nNA\nTime\n-0.0650204\n0.0087880\n362\n-7.398737\n0.0000000\n\n\nfixed\nNA\nhpt_oldYes\n0.0577155\n0.0145760\n706\n3.959637\n0.0000827\n\n\nfixed\nNA\nsexMale\n0.0290863\n0.0121127\n706\n2.401295\n0.0165947\n\n\nfixed\nNA\nscale(ageyrs)\n0.0280193\n0.0053049\n706\n5.281768\n0.0000002\n\n\nfixed\nNA\ncartcART\n0.0886504\n0.0119744\n706\n7.403327\n0.0000000\n\n\nfixed\nNA\ncartCONTROL\n-0.0159617\n0.0130719\n706\n-1.221074\n0.2224656\n\n\nran_pars\nsid\nsd_(Intercept)\n0.0745001\nNA\nNA\nNA\nNA\n\n\nran_pars\nResidual\nsd_Observation\n0.1259536\nNA\nNA\nNA\nNA\n\n\n\n\n\nCode\nn4 %&gt;% reghelper::ICC()\n\n\n[1] 0.2591817\n\n\nCode\nanova(n0, n1, n2, n3, n4) \n\n\n   Model df        AIC        BIC   logLik   Test   L.Ratio p-value\nn0     1  2  -869.6521  -859.6919 436.8260                         \nn1     2  3  -909.9268  -894.9866 457.9634 1 vs 2  42.27476  &lt;.0001\nn2     3  4  -932.4301  -912.5098 470.2150 2 vs 3  24.50329  &lt;.0001\nn3     4  6  -929.0894  -899.2089 470.5447 3 vs 4   0.65926  0.7192\nn4     5  9 -1088.4835 -1043.6628 553.2418 4 vs 5 165.39417  &lt;.0001",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Specific Packages</span>",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>`nlme`</span>"
    ]
  },
  {
    "objectID": "ss-matched-case-control.html",
    "href": "ss-matched-case-control.html",
    "title": "11  Matched Case-Control",
    "section": "",
    "text": "11.1 Objective\nTo determine if being HIV positive (exposure) is associated with malnutrition (outcome) in children on admission at a specialized nutritional rehabilitation center. A researcher intends to conduct a matched case-control study he selects children with malnutrition and matches them to controls of children without malnutrition at a ratio of 1:2.",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Sample Size</span>",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Matched Case-Control</span>"
    ]
  },
  {
    "objectID": "ss-matched-case-control.html#hypothesis",
    "href": "ss-matched-case-control.html#hypothesis",
    "title": "11  Matched Case-Control",
    "section": "11.2 Hypothesis",
    "text": "11.2 Hypothesis\n\\(H_0\\): There is no association between being malnourished and being HIV positive",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Sample Size</span>",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Matched Case-Control</span>"
    ]
  },
  {
    "objectID": "ss-matched-case-control.html#formula",
    "href": "ss-matched-case-control.html#formula",
    "title": "11  Matched Case-Control",
    "section": "11.3 Formula",
    "text": "11.3 Formula\nWe use the formula below by Wang and Ji (2020).\n\\[\nn = (\\frac{Z_{\\alpha/2} + Z_\\beta}{P_1 - P_2})^2 \\times (1 + \\frac{1}{k})\n\\]\nWhere:\n\n\\(n\\) is the number of matched pairs needed\n\\(Z_{\\alpha/2}\\) is the critical value of the standard normal distribution at the desired significance level such that a 95% confidence level will correspond to 1.96\n\\(Z_{\\beta}\\) is the critical value of the standard normal distribution at the desired power such that an 80% power will correspond to a value of 0.84.\n\\(P_1\\) is the proportion of exposure in cases. This can be obtained from similar prior studies\n\\(P_0\\) is the proportion of exposure in controls, This can be obtained from similar prior studies\n\\(k\\) is the number of controls per case such that for a 1:1 match \\(k\\) =1",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Sample Size</span>",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Matched Case-Control</span>"
    ]
  },
  {
    "objectID": "ss-matched-case-control.html#determination",
    "href": "ss-matched-case-control.html#determination",
    "title": "11  Matched Case-Control",
    "section": "11.4 Determination",
    "text": "11.4 Determination\nAssuming in the literature the proportion of HIV positive in non-malnourished children ( \\(P_0\\)) was 0.25 and that for malnourished children (\\(P_1\\)) was 0.3. Also, the investigator decides the use a 95% confidence interval and a power of 80%. The sample size is determined as below\n\\[\nn = (\\frac{1.96 + 0.84}{0.3 - 0.25})^2 \\times (1 + \\frac{1}{2})\n\\]\nThus a minimum total of 4710 study subjects will be included. This will consist of 3140 controls and 1570 cases.\n\n\n\n\nWang, Xiaofeng, and Xinge Ji. 2020. “Sample Size Estimation in Clinical Research.” Chest 158 (1): S12–20. https://doi.org/10.1016/j.chest.2020.03.010.",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Sample Size</span>",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Matched Case-Control</span>"
    ]
  },
  {
    "objectID": "gr-histogram.html",
    "href": "gr-histogram.html",
    "title": "12  Histogram",
    "section": "",
    "text": "12.0.1 Read in Data\nWe begin by importing the data into R Studio and then summarizing it.\n\n\nCode\ndf_histo &lt;- \n    readstata13::read.dta13(\"C:/Dataset/olivia_data_wide.dta\") %&gt;% \n    select(hb1, hb2, hb3, hb4)\n\ndf_histo %&gt;% \n    summarytools::dfSummary(labels.col = F, graph.col = F) \n\n\nData Frame Summary  \ndf_histo  \nDimensions: 350 x 4  \nDuplicates: 3  \n\n-----------------------------------------------------------------------------------\nNo   Variable    Stats / Values           Freqs (% of Valid)   Valid      Missing  \n---- ----------- ------------------------ -------------------- ---------- ---------\n1    hb1         Mean (sd) : 11.3 (1.2)   57 distinct values   350        0        \n     [numeric]   min &lt; med &lt; max:                              (100.0%)   (0.0%)   \n                 8.3 &lt; 11.3 &lt; 16.6                                                 \n                 IQR (CV) : 1.8 (0.1)                                              \n\n2    hb2         Mean (sd) : 11.2 (1.3)   63 distinct values   350        0        \n     [numeric]   min &lt; med &lt; max:                              (100.0%)   (0.0%)   \n                 6.1 &lt; 11 &lt; 15.6                                                   \n                 IQR (CV) : 1.8 (0.1)                                              \n\n3    hb3         Mean (sd) : 11.1 (1.2)   57 distinct values   350        0        \n     [numeric]   min &lt; med &lt; max:                              (100.0%)   (0.0%)   \n                 8 &lt; 11.1 &lt; 15.2                                                   \n                 IQR (CV) : 1.8 (0.1)                                              \n\n4    hb4         Mean (sd) : 11.8 (2.5)   89 distinct values   350        0        \n     [numeric]   min &lt; med &lt; max:                              (100.0%)   (0.0%)   \n                 3.5 &lt; 11.5 &lt; 24.4                                                 \n                 IQR (CV) : 2.4 (0.2)                                              \n-----------------------------------------------------------------------------------\n\n\n\n\n12.0.2 Simple histogram\n\n\nCode\ndf_histo %&gt;% \n    ggplot(aes(x = hb1)) +\n    geom_histogram(\n        col = \"red\", \n        fill = \"snow1\", \n        bins = 12) +\n    labs(\n        x = \"Hemoglobin (mg/dl)\", \n        y = \"Frequency\") +\n    theme_classic()\n\n\n\n\n\n\n\n\nFigure 12.1: Distribution of the first hemoglobins concentration\n\n\n\n\n\n\n\n12.0.3 Histogram with normal curve\n\n\nCode\ndf_histo %&gt;% \n    ggplot(\n        aes(x = hb1)) + \n    geom_histogram(\n        aes(y = after_stat(density)),\n        breaks = seq(7.5, 17.5, by = 1), \n        colour = \"blue\", \n        fill = \"white\") +\n    stat_function(\n        fun = dnorm, \n        args = list(mean = mean(df_histo$hb1), sd = sd(df_histo$hb1)),\n        color = 'red')+\n    labs(\n        x = \"Hemoglobin (mg/dl)\", \n        y = \"Density\") +\n    theme_classic()\n\n\n\n\n\n\n\n\nFigure 12.2: Distribution of the first hemoglobins concentration\n\n\n\n\n\n\n\n12.0.4 Panel histogram\n\n\nCode\ndf_temp &lt;- \n    df_histo %&gt;% \n    pivot_longer(cols = c(hb1, hb2, hb3, hb4)) %&gt;% \n    drop_na(value) %&gt;% \n    mutate(\n        name = factor(\n            name, \n            levels = c(\"hb1\", \"hb2\", \"hb3\", \"hb4\"),\n            labels = c(\"First HB\", \"Second HB\", \"Third HB\", \"Fourth HB\")))\n\ndf_temp %&gt;% \n    ggplot(\n        aes(x = value)) + \n    geom_histogram(\n        aes(y = after_stat(density)),\n        breaks = seq(7.55, 17.5, by = 1), \n        colour = \"blue\", \n        fill = \"white\", \n        bins = 10) +\n    stat_function(\n        fun = dnorm, \n        args = list(\n            mean = mean(df_temp$value), sd = sd(df_temp$value)),\n        color = 'red')+\n    labs(\n        x = \"Hemoglobin (mg/dl)\", \n        y = \"Density\") +\n    theme_bw()+\n    facet_wrap(\n        facets = .~name)+\n    theme(\n        text = element_text(family = \"serif\"),\n        strip.text = element_text(face = \"bold\", color = \"white\"),\n        strip.background = element_rect(fill = \"#4C4CBD\"),\n        plot.title = element_text(face = 'bold'))\n\n\n\n\n\n\n\n\nFigure 12.3: Distribution of the first hemoglobins concentration",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Histogram</span>"
    ]
  },
  {
    "objectID": "gr-boxplot.html",
    "href": "gr-boxplot.html",
    "title": "14  Boxplot",
    "section": "",
    "text": "First we read in the data\n\n\nCode\nrm(list = ls(all = TRUE))\ndat &lt;- \n    foreign::read.dta(\"C:/Dataset/bea_organ_damage_28122013.dta\")\ndataF &lt;- \n    readstata13::read.dta13(\"C:/Dataset/olivia_data_wide.dta\")\n\n\nWarning in readstata13::read.dta13(\"C:/Dataset/olivia_data_wide.dta\"): \n   Factor codes of type double or float detected in variables\n\n   anemia1, anemia2, anemia3, anemia4, anemia5\n\n   No labels have been assigned.\n   Set option 'nonint.factors = TRUE' to assign labels anyway.\n\n\n\n15 Boxplot\nNext we select three variables for plotting, keep only the complete cases and then store the ggplot() into an object called BP.\n\n\nCode\nBP &lt;- \n  dat %&gt;% \n  select(q12weight, q2idtype, q3sex) %&gt;% \n  na.omit() %&gt;%\n  ggplot(aes(x = q2idtype, y = q12weight, fill = q3sex))\n\n\nNext we draw our boxplot with axis labels, title, axes format, and color specification.\n\n\nCode\nBP + \n  geom_boxplot() +\n    theme_test() +\n    labs(title=\"My Boxplot\", x=\"Case or Control\", y=\"Weight (hgs)\") + \n    theme(plot.title = element_text(size=15, face=\"bold\"), \n          axis.text.x = element_text(size=12), \n          axis.text.y = element_text(size=12),\n          axis.title.x = element_text(size=13),\n          axis.title.y = element_text(size=13)) + \n  scale_color_discrete(name = \"Sex\")\n\n\n\n\n\n\n\n\n\nNewt we set up a similar boxplot but this time use the color option for the ggplot() and not the fill option.\n\n\nCode\nBP &lt;- \n  dat %&gt;% \n  select(q12weight, q2idtype, q3sex) %&gt;% \n  na.omit() %&gt;%\n  ggplot(aes(x = q2idtype, y = q12weight, color = q3sex))\n\n\n\n\nCode\nBP + \n  geom_boxplot() +\n    theme_light() +\n    labs(title = \"My Boxplot\", \n         x = \"Case or Control\", \n         y = \"Weight (hgs)\") + \n    theme(plot.title=element_text(size=15, face=\"bold\"), \n          axis.text.x=element_text(size=12), \n          axis.text.y=element_text(size=12),\n          axis.title.x=element_text(size=13),\n          axis.title.y=element_text(size=13)) + \n  scale_color_discrete(name=\"Sex\")\n\n\n\n\n\n\n\n\n\nCode\nrm(BP, dat)\n\n\nHere we use a different dataset to draw the next boxplot\n\n\nCode\ndf1 &lt;- read.csv(\"C:/Dataset/booking1.csv\")\nglimpse(df1)\n\n\nRows: 50\nColumns: 4\n$ id     &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, …\n$ sex    &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"…\n$ weight &lt;int&gt; 4, 10, 8, 14, 16, 9, 23, 14, 7, 13, 16, 10, 7, 13, 13, 10, 17, …\n$ height &lt;int&gt; 68, 81, 78, 90, 106, 85, 120, 98, 69, 88, 89, 81, 79, 93, 109, …\n\n\nNext we plot two boxplots on one graph\n\n\nCode\ndf1 %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(x = sex)) + \n    geom_boxplot(aes(y = weight, color=\"red\")) + \n    geom_boxplot(aes(y = height, color = \"steelblue\")) + \n  labs(color = \"Anthropometrics\") +\n  scale_color_manual(labels = c(\"Weight\",\"Height\"),\n                     values = c(\"red\", \"steelblue\"))\n\n\n\n\n\n\n\n\n\nCode\nrm(df1)\n\n\nWe then use the ToothGrowth data for for the next few boxplots\n\n\nCode\ndata(ToothGrowth)\nToothGrowth &lt;-\n  ToothGrowth %&gt;% \n  mutate(dose = factor(dose))\nglimpse(ToothGrowth)\n\n\nRows: 60\nColumns: 3\n$ len  &lt;dbl&gt; 4.2, 11.5, 7.3, 5.8, 6.4, 10.0, 11.2, 11.2, 5.2, 7.0, 16.5, 16.5,…\n$ supp &lt;fct&gt; VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, VC, V…\n$ dose &lt;fct&gt; 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 1, 1, 1, 1, …\n\n\nAnd then we form the ggplot object\n\n\nCode\np &lt;- \n  ToothGrowth %&gt;% \n  ggplot(aes(x = dose, y = len))\n\n\nOther renditions of the boxplot is as shown below. First rotated one\n\n\nCode\np + geom_boxplot() + coord_flip()     # Axis rotated\n\n\n\n\n\n\n\n\n\nNotched boxplot\n\n\nCode\np + geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\nCustomizaton of the outlier\n\n\nCode\np + geom_boxplot(outlier.colour=\"red\", \n                 outlier.shape=8, \n                 outlier.size=4)\n\n\n\n\n\n\n\n\n\nWe add a statistic to the plot here\n\n\nCode\np + geom_boxplot() + \n    stat_summary(fun = mean, \n                 geom = \"point\", \n                 shape = 18, \n                 size = 4, \n                 col = \"red\")\n\n\n\n\n\n\n\n\n\nAnd then limit the categories the x axis\n\n\nCode\np + \n  geom_boxplot() + \n  scale_x_discrete(limits=c(\"0.5\", \"2\"))\n\n\nWarning: Removed 20 rows containing missing values or values outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nNext a boxplot with a superimposed dotplot\n\n\nCode\np + \n  geom_boxplot() + \n  geom_dotplot(binaxis='y', \n               stackdir='center', \n               dotsize=0.5, \n               binwidth = 1,\n               col = \"red\",\n               fill = \"red\")\n\n\n\n\n\n\n\n\n\nAnd a boxplot with superimposed jittered points\n\n\nCode\np + \n  geom_boxplot() +\n  geom_jitter(shape=16, position=position_jitter(0.2))\n\n\n\n\n\n\n\n\n\nCode\nrm(p)\n\n\nNext we manually set out own color scale\n\n\nCode\nP &lt;- \n  ToothGrowth %&gt;% \n  ggplot(aes(factor(dose), len, color=dose))\n\n\n\n\nCode\nP + \n    geom_boxplot() +\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"))\n\n\n\n\n\n\n\n\n\nAnd use one of the color scales\n\n\nCode\nP + \n    geom_boxplot() +\n  scale_color_brewer(palette=\"Dark2\") +\n  scale_fill_brewer(palette=\"Dark2\")\n\n\n\n\n\n\n\n\n\nChange the legend position\n\n\nCode\nP + \n  geom_boxplot() +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\nAnd remove legend\n\n\nCode\nP + \n  geom_boxplot() +\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nChange the order of items in the legend\n\n\nCode\nP + \n  geom_boxplot() +\n  scale_x_discrete(limits=c(\"2\", \"0.5\", \"1\"))\n\n\n\n\n\n\n\n\n\nBox plot with multiple groups: Change box plot colors by groups\n\n\nCode\nggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) + \n    geom_boxplot()\n\n\n\n\n\n\n\n\n\nCode\nrm(P)\n\n\nChange the position of the boxes\n\n\nCode\nP &lt;- \n  ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) + \n    geom_boxplot(position=position_dodge(1))\nP\n\n\n\n\n\n\n\n\n\nAnd then we add dots\n\n\nCode\nP + geom_dotplot(binaxis='y', \n                 stackdir='center', \n                 position=position_dodge(1),\n                 binwidth = 1)\n\n\n\n\n\n\n\n\n\nCustomized\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = Time, y = MCV, col = Time), fill = \"snow1\") +\n    geom_boxplot(\n        outlier.color = 'black', \n        outlier.shape = 23, \n        outlier.fill = \"steelblue2\", \n        outlier.size = 2) +\n    stat_summary(\n        aes(fill=Time), \n        fun.data = mean_se, \n        geom = \"pointrange\", \n        size=0.5, \n        shape =23, \n        color = \"black\", \n        show.legend = F) +\n    scale_color_manual(\n        name = \"Measure\", \n        values = c(\"red\", \"yellow\", \"green\", \"violet\", \"brown\"),\n        labels = c(\"First\",\"Second\", \"Third\", \"Fourth\", \"Fifth\")) +\n    scale_x_discrete(\n        labels =c(\n            \"mcv1\" = \"First MCV\", \n            \"mcv2\" = \"Second MCV\", \n            \"mcv3\" = \"Third MCV\", \n            \"mcv4\" = \"Fourth MCV\", \n            \"mcv5\" = \"Fifth MCV\")) +\n    labs(title = \"Distribution of MCVs over the review periods\") +\n    theme(\n        plot.title = element_text(\n            family = \"serif\", \n            face = \"bold.italic\", \n            size = 14, \n            colour = \"steelblue4\", \n            hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = Time, y = MCV, col = Time), fill = \"snow1\") +\n    geom_boxplot(outlier.color = \"white\", outlier.alpha = 0) +\n    geom_jitter(width =.2, alpha = .2, col=1) +\n    labs(\n        x = \"Time of Sample taking\", \n        y = \"Mean Corpuscular Volume\",\n        title = \"Sequential changes in MCV over the study duration\") +\n    theme_bw() +\n    scale_x_discrete(\n        labels = c(\n            \"mcv1\" = \"First MCV\", \n            \"mcv2\" = \"Second MCV\", \n            \"mcv3\" = \"Third MCV\",\n            \"mcv4\" = \"Fourth MCV\",\n            \"mcv5\" = \"Fifth MCV\"))\n\n\n\n\n\n\n\n\nFigure 15.1: Sequential changes in MCV over the study duration",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Boxplot</span>"
    ]
  },
  {
    "objectID": "gr-barplot.html",
    "href": "gr-barplot.html",
    "title": "15  Barplot",
    "section": "",
    "text": "15.1 Basic barplot\nNext, we make the basic Barplot\nCode\np &lt;- \n  df %&gt;% \n  ggplot(aes(x = dose, y = len)) \n\np + geom_bar(stat=\"identity\")\nNext we flip the barlot horizontal, change the size of the bar width and change the theme\nCode\np + \n  geom_bar(\n      stat = \"identity\", \n      width = 0.8, \n      color = \"blue\", \n      fill = \"grey90\") +\n  coord_flip() +\n  theme_bw()\nNext we limit the observations to just two\nCode\np + \n  geom_bar(\n      stat = \"identity\", \n      width = 0.8, \n      color = \"black\", \n      fill = \"steelblue\") +\n  scale_x_discrete(limits=c(\"D0.5\", \"D2\"))\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_bar()`).\nNext we put labels on the bars at the outside and inside\nCode\np +\n    geom_bar(stat=\"identity\", fill=\"steelblue\")+\n    geom_text(\n        aes(label=len), \n        vjust=-0.5, \n        size=4, \n        col = \"black\")+\n    theme_minimal()\nCode\n# Change barplot line colors by groups\np &lt;- \n    ggplot(df, aes(x = dose, y = len, color = dose)) + \n    geom_bar(stat = \"identity\", fill = \"white\") + \n    geom_text(aes(label=len), vjust=1.5, size=5, col = \"red\")\np",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Barplot</span>"
    ]
  },
  {
    "objectID": "gr-barplot.html#use-custom-color-palettes",
    "href": "gr-barplot.html#use-custom-color-palettes",
    "title": "15  Barplot",
    "section": "15.2 Use custom color palettes",
    "text": "15.2 Use custom color palettes\n\n\nCode\np + scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"))\n\n\n\n\n\n\n\n\n\nUse brewer color palettes\n\n\nCode\np + scale_color_brewer(palette=\"Dark2\")\n\n\n\n\n\n\n\n\n\n\n\nCode\np + scale_color_grey() + theme_classic()\n\n\n\n\n\n\n\n\n\nChange barplot fill colors by groups\n\n\nCode\n# \np &lt;- \n  ggplot(df, aes(x=dose, y=len, fill=dose)) +\n  geom_bar(stat=\"identity\")+theme_minimal()\np\n\n\n\n\n\n\n\n\n\nUse custom color palettes\n\n\nCode\np + scale_fill_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\np + \n  scale_fill_brewer(palette=\"Dark2\")\n\n\n\n\n\n\n\n\n\nUse grey scale\n\n\nCode\np + scale_fill_grey()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(df, aes(x=dose, y=len, fill=dose))+\n    geom_bar(stat=\"identity\", color=\"black\")+\n    scale_fill_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"))+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nChange bar fill colors to blues\n\n\nCode\np + scale_fill_brewer(palette=\"Blues\")\n\n\n\n\n\n\n\n\n\nCode\n    p + theme(legend.position=\"top\")\n\n\n\n\n\n\n\n\n\nCode\n    p + theme(legend.position=\"bottom\")\n\n\n\n\n\n\n\n\n\nCode\n    p + theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nChange position of bars\n\n\nCode\np + \n  scale_x_discrete(limits=c(\"D2\", \"D0.5\", \"D1\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\ndat &lt;- foreign::read.dta(\"C:/dataset/bea_organ_damage_28122013.dta\")\nBC &lt;- \n  dat %&gt;% \n  select(q2idtype, q3sex) %&gt;% \n  na.omit() %&gt;% \n  group_by(q2idtype, q3sex) %&gt;% \n  summarize(Freq = n()) %&gt;% \n  ggplot(aes(x=q2idtype, y=Freq, fill=q3sex))\n\n\n`summarise()` has grouped output by 'q2idtype'. You can override using the\n`.groups` argument.\n\n\nNext we draw the barplot using the economist theme from the ggthemes package\n\n\nCode\nBC +  \n  geom_bar(stat=\"identity\", position= position_dodge()) +\n    geom_text(aes(label=Freq), vjust=1.6, color=\"black\", \n              size=4, position = position_dodge(0.9)) +\n    scale_fill_brewer(palette=\"Reds\") + \n    labs(title=\"My Barplot\", x=\"Case or Control\", y=\"Frequency\") +\n    scale_color_discrete(name=\"Sex\") + \n    ggthemes::theme_stata()\n\n\n\n\n\n\n\n\n\nNext we plot a baroplot with error bars. To do that we first we form the ggplot object that we call BC.\n\n\nCode\nBC &lt;-\n  dat %&gt;% \n  select(Type = q2idtype, Sex = q3sex, q12weight) %&gt;% \n  na.omit() %&gt;% \n  group_by(Type, Sex) %&gt;% \n  summarize(Mean.wgt = mean(q12weight), SD.wgt = sd(q12weight)) %&gt;% \n  ggplot(aes(x=Type, y=Mean.wgt, fill=Sex))\n\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n\nAnd then plot the graph\n\n\nCode\nBC +  \n  geom_bar(stat=\"identity\", position=position_dodge()) +\n    geom_errorbar(aes(ymin=Mean.wgt-SD.wgt, ymax=Mean.wgt+SD.wgt), \n                  width=.2, size=0., position=position_dodge(.9)) +\n    labs(title=\"Mean weight with error bars\", \n         x=\"Case or Control\", \n         y=\"Mean(kgs)\") +\n    scale_fill_brewer(palette=\"Paired\") + \n    ggthemes::theme_stata()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf2 &lt;- data.frame(supp=rep(c(\"VC\", \"OJ\"), each=3),\n                dose=rep(c(\"D0.5\", \"D1\", \"D2\"),2),\n                len=c(6.8, 15, 33, 4.2, 10, 29.5))\nhead(df2)\n\n\nTRUE   supp dose  len\nTRUE 1   VC D0.5  6.8\nTRUE 2   VC   D1 15.0\nTRUE 3   VC   D2 33.0\nTRUE 4   OJ D0.5  4.2\nTRUE 5   OJ   D1 10.0\nTRUE 6   OJ   D2 29.5\n\n\n\n\nCode\ndf2 %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) +\n  geom_bar(stat=\"identity\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf2 %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) + \n  geom_bar(stat=\"identity\", position=position_dodge())\n\n\n\n\n\n\n\n\n\nChange color manually\n\n\nCode\np &lt;- \n  ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +\n  geom_bar(stat=\"identity\", color=\"black\", position=position_dodge()) +\n  scale_fill_manual(values=c('#999999','#E69F00')) +\n  theme_minimal()\np\n\n\n\n\n\n\n\n\n\nCreate some data\n\n\nCode\ndf_sorted &lt;- \n  tibble(supp = factor(rep(c(\"VC\", \"OJ\"), each=3)),\n         dose = rep(c(\"0.5\", \"1\", \"2\"),2),\n         len = c(6.8, 15, 33, 4.2, 10, 29.5)) %&gt;% \n  arrange(dose, supp) %&gt;% \n  group_by(dose) %&gt;% \n  mutate(label_ypos=cumsum(len))\ndf_sorted\n\n\n# A tibble: 6 × 4\n# Groups:   dose [3]\n  supp  dose    len label_ypos\n  &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 OJ    0.5     4.2        4.2\n2 VC    0.5     6.8       11  \n3 OJ    1      10         10  \n4 VC    1      15         25  \n5 OJ    2      29.5       29.5\n6 VC    2      33         62.5\n\n\n\n\nCode\ndf_sorted %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) +\n  geom_bar(stat=\"identity\")+\n  geom_text(aes(y=label_ypos, label=len), vjust=1.6, \n            color=\"white\", size=3.5)+\n  scale_fill_brewer(palette=\"Paired\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nPlotting barplot with x-axis treated as continuous variable\n\n\nCode\n# \ndf_sorted %&gt;% \n  mutate(dose = as.numeric(dose)) %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) +\n  geom_bar(stat=\"identity\", position=position_dodge())+\n  scale_fill_brewer(palette=\"Paired\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Axis treated as discrete variable\ndf_sorted %&gt;% \n  mutate(dose = as.factor(dose)) %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) +\n  geom_bar(stat=\"identity\", position=position_dodge())+\n  scale_fill_brewer(palette=\"Paired\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nToothGrowth %&gt;% \n  mutate(dose = as.factor(dose)) %&gt;% \n  group_by(supp, dose) %&gt;% \n  summarise(sd = sd(len), len = mean(len)) %&gt;% \n  ggplot(aes(x=dose, y=len, fill=supp)) + \n  geom_bar(stat=\"identity\", position=position_dodge()) +\n  geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2, \n                position=position_dodge(.9)) +\n  labs(title=\"Plot of length  per dose\", x=\"Dose (mg)\", y = \"Length\")+\n  scale_fill_brewer(palette=\"Paired\") + \n  theme_minimal()\n\n\n`summarise()` has grouped output by 'supp'. You can override using the\n`.groups` argument.",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Barplot</span>"
    ]
  },
  {
    "objectID": "gr-scatter.html",
    "href": "gr-scatter.html",
    "title": "16  Scatter Plot",
    "section": "",
    "text": "Code\ndat &lt;- foreign::read.dta(\"C:/Dataset/bea_organ_damage_28122013.dta\")\n\ndataF &lt;- readstata13::read.dta13(\"C:/Dataset/olivia_data_wide.dta\")\n\ndf1 &lt;- read.csv(\"C:\\\\Users\\\\Sbngu\\\\Dropbox\\\\Data for book\\\\booking1.csv\")\n\nSC &lt;- \n  dat %&gt;% \n  select(q12weight, q13waist, q3sex, q10what) %&gt;% \n  drop_na() %&gt;%\n  ggplot(aes(x = q12weight, y = q13waist, color = q3sex))\n\n\n\n\nCode\nSC + \n    geom_point(shape = \"diamond\", size = 2) +\n    labs(\n        x = \"Weight (kgs)\", \n        color = \"Gender\",\n        y = \"Waist Circumference (cms)\") +\n    geom_smooth(method = \"lm\", formula = \"y ~ x\") +\n    theme(\n        axis.title.x = element_text(\n            vjust = 0, \n            size = 14, \n            color = \"blue\", \n            face = \"italic\"),\n        axis.title.y = element_text(\n          vjust = 2, \n          size = 14, \n          color = \"firebrick\", \n          face = \"bold\"),\n        axis.text = element_text(\n          color = \"dodgerblue\", size = 12),\n        axis.text.x = element_text(face = \"italic\"))\n\n\n\n\n\n\n\n\nFigure 16.1: Relationship between weight and waist circunference\n\n\n\n\n\n\n\nCode\nSC +    \n  geom_point(aes(shape = q3sex)) + \n    geom_smooth(method=lm, formula = y~x, se=F) + \n    theme_bw(base_family = \"serif\") +\n    labs(\n        x = \"Weight (kgs)\", \n        y = \"Waist Circumference (cms)\") + \n    theme(\n        plot.title=element_text(size=15, face=\"bold\"), \n        axis.text.x=element_text(size=12), \n        axis.text.y=element_text(size=12),\n        axis.title.x=element_text(size=13),\n        axis.title.y=element_text(size=13), \n        plot.background = element_rect(fill = \"grey90\"),\n        panel.background = element_rect(fill = \"snow1\")) +\n    scale_color_discrete(name=\"Sex\") +\n    scale_shape_discrete(name=\"Sex\")\n\n\n\n\n\n\n\n\nFigure 16.2: Relationship between weight and waist circunference\n\n\n\n\n\n\n\nCode\nSC +    \n    geom_point() + \n    geom_smooth(method=loess, se=TRUE, formula = y~x) + \n    theme_classic() +\n    labs(\n        x = \"Weight (kgs)\", \n        y = \"Waist Circumference (cms)\") + \n    theme(\n        plot.title=element_text(size=15, face=\"bold\"), \n        axis.text.x=element_text(size=12), \n        axis.text.y=element_text(size=12),\n        axis.title.x=element_text(size=13),\n        axis.title.y=element_text(size=13)) + \n  scale_color_discrete(name=\"Sex\")\n\n\n\n\n\n\n\n\nFigure 16.3: Relationship between weight and waist circunference\n\n\n\n\n\n\n\nCode\nSC +    \n  geom_point() + \n    geom_smooth(method=lm, formula = y ~ x, se=F) + \n    theme_minimal() +\n    labs(\n        x = \"Weight (kgs)\", \n        y = \"Waist Circumference (cms)\") + \n    theme(\n        plot.title=element_text(size=15, face=\"bold\"), \n        axis.text.x=element_text(size=12), \n        axis.text.y=element_text(size=12),\n        axis.title.x=element_text(size=13),\n        axis.title.y=element_text(size=13)) + \n    scale_color_discrete(name = \"Sex\") + \n    facet_wrap(~q10what)\n\n\n\n\n\n\n\n\nFigure 16.4: Relationship between weight and waist circunference\n\n\n\n\n\n\n\nCode\nSC + \n  geom_point(color = \"firebrick\") +\n  labs(\n      x = \"Weight (kgs)\", \n      y = \"Waist Circumference (cms)\") +\n  theme(axis.ticks.y = element_blank(),\n        axis.text.y = element_blank())\n\n\n\n\n\n\n\n\nFigure 16.5: Relationship between weight and waist circunference\n\n\n\n\n\nLimit Axes Range\n\n\nCode\ndf1 %&gt;% \n    drop_na(weight, height) %&gt;% \n  ggplot(aes(x = weight, y = height)) +\n    geom_point(aes(color = sex, shape = sex)) + \n    geom_smooth(method = \"lm\", formula = y ~ x, se = T) + \n    labs(x = \"Weight (kgs)\", y = \"Height (cm)\") +\n    theme_light() +\n    theme(\n        plot.title=element_text(size = 16, face = \"bold\"), \n        axis.text.x=element_text(size = 12), \n        axis.text.y=element_text(size = 12),\n        axis.title.x=element_text(size = 12, face = \"bold\"),\n        axis.title.y=element_text(size = 12, face = \"bold\")) + \n    scale_color_discrete(name=\"Gender\") + \n    scale_shape_discrete(name=\"Gender\")\n\n\n\n\n\n\n\n\nFigure 16.6: Plot of Weight versus height\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    mutate(\n        mcv_cat_1 = case_when(\n            mcv1 &lt; 80 ~ \"Microcyte\",\n            mcv1 &gt;= 80 & mcv1 &lt;= 90 ~ \"Normal\",\n            mcv1 &gt; 90 ~ \"Macrocyte\") %&gt;% \n            factor(levels = c(\"Microcyte\", \"Normal\", \"Macrocyte\"))) %&gt;% \n    ggplot(aes(x = hb1, y = hb2)) +\n    geom_point(aes(size = mcv_cat_1, col = mcv_cat_1), alpha = .5) +\n    geom_smooth(formula = y ~ x, method = \"lm\", color = \"black\") +\n    geom_vline(\n        xintercept = 10, \n        color = \"red\", \n        linewidth = 0.5, \n        linetype = \"dashed\") +\n    geom_hline(\n        yintercept = 10, \n        color = \"red\", \n        linewidth = 0.5, \n        linetype = \"dashed\") +\n    geom_abline(\n        intercept = 0, \n        slope = 1, \n        color = \"brown\", \n        linewidth = 0.5, \n        linetype = \"dashed\") +\n    labs(x = \"First Hemoglobin\", y = \"Second Hemoglobin\") +\n    theme_light()\n\n\n\n\n\n\n\n\nFigure 16.7: Relationship between first and second platelet counts showing possible outliers\n\n\n\n\n\n\n\nCode\ndataF.2 &lt;- \n    tibble(\n    lbls = c(\"Kofi\",\"Ama\", \"Yaw\",\"Sammy\", \"Abena\"),\n    hgts = c(176, 154, 136, 144, 165),\n    wgts = c(65, 76,48,77, 65))\n\ndataF.2 %&gt;% \n    ggplot(aes(x = hgts, y = wgts))+\n    geom_point() +\n    annotate(\n        \"text\", \n        x = dataF.2$hgts, \n        y = dataF.2$wgts, \n        label = dataF.2$lbls, \n        vjust = 1, col=1:5) +\n    labs(\n        title = \"Height vrs Weight\", \n        subtitle = \"Yes we can\", \n        caption = \"2020 Data\")+\n    ggthemes::theme_gdocs() +\n    scale_y_continuous(\n        name = \"Weight (kgs)\", \n        limits = c(40, 80), \n        breaks = c(45, 50, 55, 60, 65, 70, 75)) +\n    scale_x_continuous(\n        name = \"Height (kgs)\", \n        limits = c(130, 200), \n        breaks = seq(130, 190, 10)) +\n    geom_label(aes(label = lbls), col = \"grey\", nudge_y = 3)\n\n\n\n\n\n\n\n\nFigure 16.8: Height v. Weight\n\n\n\n\n\n\n\nCode\ndataG &lt;- \n    dataF %&gt;% \n    mutate(is_outlier = (plt1&lt;50 | plt2&lt;100 | plt2&gt;400 | plt1&gt;400)) \n\ndataG %&gt;% \n    ggplot(aes(x = plt1, y = plt2, col = is_outlier)) + \n    geom_point() +\n    labs(\n        x = \"First Platelet Count\",\n        y = \"Second Platelet Count\",\n        title = \"Relationship between first and second platelet counts showing possible outliers\")+\n    theme_bw()+\n    ggrepel::geom_label_repel(\n        data = filter(dataG, is_outlier == TRUE), \n        aes(label=id)) +\n    theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\nFigure 16.9: Relationship between first and second platelet counts showing possible outliers\n\n\n\n\n\n\n\nCode\np1 &lt;-\n    dataF %&gt;% \n    ggplot(aes(x = hb1, y = hb2))+\n    geom_point(col = \"maroon\") +\n    geom_smooth(formula = y~x, method = \"lm\") +\n    theme_bw() +\n    labs(\n        x = \"First HgB measurement (g/dL)\",\n        y = \"Second HgB measurement (g/dL)\")\n\np2 &lt;- \n    dataF %&gt;% \n    ggplot() +\n    geom_histogram(aes(x=hb1),bins = 12, col=\"black\", fill = \"grey\") +\n    labs(x=NULL, y=NULL) +\n    theme_void() +\n    theme(\n        axis.ticks.y = element_blank(),\n        axis.ticks.x  = element_blank(),\n        axis.line.x = element_blank(),\n        axis.line.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank())\n\np3 &lt;- \n    dataF %&gt;% \n    ggplot() +\n    geom_histogram(aes(x=hb2),bins = 12, col=\"black\", fill = \"grey\") +\n    coord_flip()+\n    labs(x=NULL, y=NULL) +\n    theme_void() +\n    theme(\n        axis.ticks.y = element_blank(),\n          axis.ticks.x  = element_blank(),\n          axis.line.x = element_blank(),\n          axis.line.y = element_blank(),\n          axis.text.x = element_blank(),\n          axis.text.y = element_blank())\n\ncol1 &lt;- (p2/p1) + plot_layout(heights = c(1,4))\ncol2 &lt;- (plot_spacer()/p3) + plot_layout(heights = c(1,4))\n(col1 | col2) +  \n    plot_layout(widths = c(5,1)) +\n    plot_annotation(caption = \"Source: 2021 Data\")\n\n\n\n\n\n\n\n\nFigure 16.10: My special scatterplot with histograms of first and secon HgB\n\n\n\n\n\n\n\nCode\np1 &lt;-\n    dataF %&gt;% \n    ggplot(aes(x=hb1, y = hb2, col = fpreg)) +\n    geom_point() +\n    geom_density_2d(color = \"blue\")\n\np2 &lt;-\n    dataF %&gt;% \n    ggplot(aes(x=hb1, y = hb3, col = fpreg)) +\n    geom_point() +\n    geom_density_2d(color = \"blue\")\n\n(p1 + p2) +\n    plot_annotation(\n        title = \"My special title is here\",\n        subtitle = \"Yes it is here\",\n        caption = \"Why not!\",\n        theme = theme(\n            plot.title = element_text(family =\"serif\", colour = \"red\"),\n            plot.subtitle = element_text(\n                family = \"serif\", color = \"red\", face = \"italic\")),\n        tag_levels = \"A\") + \n    plot_layout(widths = c(1, 2),guides = \"collect\")\n\n\n\n\n\n\n\n\nFigure 16.11: Combining plots",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Scatter Plot</span>"
    ]
  },
  {
    "objectID": "gr-forest-plot.html",
    "href": "gr-forest-plot.html",
    "title": "18  Forest Plot",
    "section": "",
    "text": "Forest plot example\n\n\nCode\nlabel &lt;- paste0(\"X\", 1:6)\nmean  &lt;- c(1.29,0.76,2.43,1.68,1.22,1.7) \nlower &lt;- c(0.84,0.50,1.58,1.1,0.8,1.11)\nupper &lt;- c(1.95,1.16,3.67,2.54,1.85,2.56)\n\ndf &lt;- data.frame(label, mean, lower, upper)\n\n# reverses the factor level ordering for labels after coord_flip()\ndf$label &lt;- factor(df$label, levels=rev(df$label))\n\nlibrary(ggplot2)\nfp &lt;- ggplot(data=df, aes(x=label, y=mean, ymin=lower, ymax=upper)) +\n        geom_pointrange() + \n        geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip\n        coord_flip() +  # flip coordinates (puts labels on y axis)\n        xlab(\"Label\") + ylab(\"Mean (95% CI)\") +\n        theme_bw()  # use a white background\nprint(fp)",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Forest Plot</span>"
    ]
  },
  {
    "objectID": "gr-population-pyramid.html",
    "href": "gr-population-pyramid.html",
    "title": "19  Population Pyramid",
    "section": "",
    "text": "19.0.0.1 Population Pyramid\n\n\nCode\nreadxl::read_xlsx(\n        \"C:/Dataset/ghana.xlsx\",\n        skip = 3, \n        sheet = \"2000 - 2020\", \n        range = \"A4:ARD262\") %&gt;% \n    select(ends_with(\"20\")) %&gt;% \n    filter(BTOTL_2020==29340248) %&gt;% \n    pivot_longer(cols = BTOTL_2020:F80PL_2020) %&gt;% \n    filter(!name %in% c(\"BTOTL_2020\", \"MTOTL_2020\", \"FTOTL_2020\") ) %&gt;% \n    filter(!str_detect(name, \"^B\")) %&gt;% \n    mutate(\n        sex = str_extract(name, \"^\\\\w\"),\n        agegrp = str_c(str_sub(name, 2, 3),\"-\", str_sub(name, 4,5)),\n        Population = ifelse(sex == \"F\", -value, value)) %&gt;% \n    ggplot(aes(x = agegrp, y = Population, fill = sex)) + \n    geom_bar(stat = \"identity\") + \n    labs(x = \"Age Grouping in Years\", y = NULL, fill = \"Gender\") +\n    scale_y_continuous(\n        breaks = seq(-2000000, 2000000, 500000), \n        labels = paste0(as.character(c(seq(2.0, 0.5, -0.5), \n        seq(0, 2.0, 0.5))), \"m\")) + \n    coord_flip() +\n    scale_fill_brewer(palette = \"Set1\", labels = c(\"Female\",\"Male\")) + \n    theme_classic()\n\n\n\n\n\n\n\n\nFigure 19.1: Population pyramid of Ghana (2020)",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Population Pyramid</span>"
    ]
  },
  {
    "objectID": "gr-miscellaneous.html",
    "href": "gr-miscellaneous.html",
    "title": "20  Miscellaneous",
    "section": "",
    "text": "Code\ndataF %&gt;% \n    ggplot(aes(x = hb1, y = hb2, color = educ, shape = educ)) +\n    geom_point() +\n    geom_smooth(formula = y ~ x, method = \"lm\") +\n    theme_light()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(starts_with(\"hb\"), fpreg) %&gt;% \n    GGally::ggpairs(columns = 1:5, aes(colour = fpreg)) + \n    scale_fill_brewer(palette = \"Set1\") +\n    scale_colour_brewer(palette = \"Set1\")\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    mutate(mcv_cat_1 = case_when(mcv1 &lt; 80 ~ \"Microcyte\",\n                                 mcv1 &gt;= 80 & mcv1 &lt;= 90 ~ \"Normal\",\n                                 mcv1 &gt; 90 ~ \"Macrocyte\") %&gt;% \n               factor(levels = c(\"Microcyte\", \"Normal\", \"Macrocyte\"))) %&gt;% \n    ggplot(aes(x = hb1, y = hb2)) +\n    geom_point(aes(size = mcv_cat_1, col = mcv_cat_1), alpha = .5) +\n    geom_smooth(formula = y ~ x, method = \"lm\", color = \"black\") +\n    geom_vline(xintercept = 10, color = \"red\", size = 0.5, linetype = \"dashed\") +\n    geom_hline(yintercept = 10, color = \"red\", size = 0.5, linetype = \"dashed\") +\n    geom_abline(intercept = 0, slope = 1, color = \"brown\", size = 0.5, \n                linetype = \"dashed\") +\n    labs(x = \"First Hemoglobin\", \n         y = \"Second Hemoglobin\", \n         title = \"Hemoglobin on Hemoglobin Distribution\") +\n    theme_light()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Using size for a discrete variable is not advised.\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = Time, y = MCV, col = Time), fill = \"snow1\") +\n    ggbeeswarm::geom_beeswarm() +\n    labs(x = \"Time of Sample taking\", \n         y = \"Mean Corpuscular Volume\",\n         title = \"Sequential changes in MCV over the study duration\") +\n    theme_bw() +\n    scale_x_discrete(\n        labels = c(\n            \"mcv1\" = \"First MCV\", \"mcv2\" = \"Second MCV\", \"mcv3\" = \"Third MCV\", \n            \"mcv4\" = \"Fourth MCV\", \"mcv5\" = \"Fifth MCV\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = Time, y = MCV, col = Time), fill = \"snow1\") +\n    ggbeeswarm::geom_quasirandom() +\n    labs(\n        x = \"Time of Sample taking\", \n        y = \"Mean Corpuscular Volume\",\n        title = \"Sequential changes in MCV over the study duration\") +\n    theme_bw() +\n    scale_x_discrete(\n        labels =c(\n            \"mcv1\" = \"First MCV\", \"mcv2\" = \"Second MCV\", \"mcv3\" = \"Third MCV\",\n            \"mcv4\" = \"Fourth MCV\", \"mcv5\" = \"Fifth MCV\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = MCV, fill = Time)) +\n    ggridges::geom_density_ridges(aes(y = agecat), alpha = .5) +\n    labs(x = \"MCV\", \n         y = \"Age Group Category (years)\",\n         title = \"Sequential changes in MCV over the study duration per age category\") +\n    ggridges::theme_ridges() +\n    scale_fill_discrete(name = \"Measure\", \n                        labels = c(\"mcv1\" = \"First\", \n                                   \"mcv2\" = \"Second\", \n                                   \"mcv3\" = \"Third\",\n                                   \"mcv4\" = \"Fourth\",\n                                   \"mcv5\" = \"Fifth\")) +\n    theme(legend.position = \"right\")\n\n\nPicking joint bandwidth of 3.72\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(mcv1, mcv2, mcv3, mcv4, mcv5, agecat, id) %&gt;%\n    pivot_longer(cols = mcv1:mcv5, names_to = \"Time\", values_to = \"MCV\") %&gt;% \n    ggplot(aes(x = Time, y = MCV, col = Time), fill = \"snow1\") +\n    geom_boxplot(outlier.color = \"white\", outlier.alpha = 0) +\n    geom_jitter(width =.2, alpha = .2, col=1) +\n    labs(x = \"Time of Sample taking\", \n         y = \"Mean Corpuscular Volume\",\n         title = \"Sequential changes in MCV over the study duration\") +\n    theme_bw() +\n    scale_x_discrete(labels =c(\"mcv1\" = \"First MCV\", \n                               \"mcv2\" = \"Second MCV\", \n                               \"mcv3\" = \"Third MCV\",\n                               \"mcv4\" = \"Fourth MCV\",\n                               \"mcv5\" = \"Fifth MCV\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(x = mcv1, y = mch1, size = mcv1)) +\n    geom_point(shape = 23, aes(fill = agecat), alpha =.2) +\n    scale_x_continuous(name = \"Initial Mean Corpuscular Volume\",\n                       breaks = seq(50, 130, 10),\n                       labels = c(\"50.0\",\"60.0\",\"70.0\", \"80.0\", \"90.0\", \"100.0\", \n                                  \"110.0\",\"120.0\", \"130.0\"), \n                       position = \"top\") +\n    scale_y_continuous(name = \"Mean Corpuscular Hemoglobin\", \n                       limits = c(15,45),\n                       breaks = c(15, 30, 45), \n                       labels = c(\"15.00\",\"30.00\",\"45.00\"),\n                       position = \"right\") +\n    scale_fill_manual(name = \"Age Category\", \n                      values = c(\"blue\", \"red\", \"green\", \"brown\")) +\n    scale_size_continuous(name = \"MCV\",\n                          range = c(1,4), \n                          limits = c(50, 140), \n                          breaks = c(80, 120, 140),\n                          labels = c(\"Microcyte\", \"Normocyte\", \"Macrocyte\"))\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.1 Elipse to show grouping\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(x = hb4, y = hb5, col = n_anc, fill = n_anc)) +\n    geom_point(size = 1.5) +\n    stat_ellipse(geom = \"polygon\", alpha = .2) +\n    labs(title = \" Relationship between HB4 and HB5 for various age groups\",\n         x = \"Hemoglobin 4 (mg/dl)\",\n         y = \"Hemoglobin 5 (mg/dl)\") +\n    scale_color_manual(values = c(\"red\",\"green\", \"blue\"),\n                       guide = guide_legend(title = \"ANC Visits\", \n                                            title.hjust = 0.5, \n                                            title.position = \"top\", \n                                            label.position = \"right\", \n                                            direction = \"horizontal\", \n                                            label.hjust = 0.5, \n                                            nrow = 2)) +\n    scale_fill_manual(values = c(\"red\",\"green\", \"blue\"),\n                       guide = guide_legend(title = \"ANC Visits\", \n                                            title.hjust = 0.5, \n                                            title.position = \"top\", \n                                            label.position = \"right\", \n                                            direction = \"horizontal\", \n                                            label.hjust = 0.5, \n                                            nrow = 2)) +\n    theme_light()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggplot(size = 0.5) +\n    geom_point(aes(hb3, mcv3, color = mcv1, size = occup, shape = educ)) + \n    guides(color = guide_colorbar(title = \"First MCV\"),\n           shape = guide_legend(title = \"Educational level\"), \n           size = guide_legend(title = \"Occupation\"))\n\n\nWarning: Using size for a discrete variable is not advised.\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.2 Histogram with density overlay\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(x = hb1, y = ..density..)) +\n    geom_histogram(fill = \"skyblue\", col = \"black\", bins = 15)+\n    geom_density(aes(y = ..density..), col = \"red\", size= 1) +\n    labs(x = \"First HB\", y = \"Density\", title = \"Distribution of HgB\")+\n    theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.3 Histogram with normal overlay\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(x = hb2))+\n    geom_histogram(aes(y = ..density..), bins=10, fill = \"snow\", col = \"red\") +\n    stat_function(fun = dnorm, \n                  args = list(mean = mean(dataF$hb2, na.rm=T), \n                              sd = sd(dataF$hb2)), col = \"blue\",\n                  size = 1.5)\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.4 Scatter plot by the various age groups - Facetting\n\n\nCode\nagecat_label &lt;- \n    c(\"Age: 10-19 years\", \"Age: 20-29 years\",\n      \"Age: 30-39 years\",\"Age: 40-49 years\")\n\nnames(agecat_label) &lt;- c(\"10-19\", \"20-29\", \"30-39\", \"50-59\")\n\ndataF %&gt;%\n    ggplot(aes(hb3, mcv3), size = 0.5) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = y~x) +\n    labs(\n        title = \"Relationship between hemoglobin and mean corpuscular volume\",\n        x =  \"Hemoglobin (mg/dl)\",\n        y = \"Mean Corpuscular Volume (fl)\")+\n    theme_bw()+\n    facet_wrap(facets = .~agecat, labeller = labeller(agecat = agecat_label))+\n    theme(\n        text = element_text(family = \"serif\"),\n        strip.text = element_text(face = \"bold\"),\n        strip.background = element_rect(fill = \"white\"),\n        plot.title = element_text(face = 'bold'))\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(hb3, mcv3), size = 0.5) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = y~x) +\n    labs(\n        title = \"Relationship between hemoglobin and mean corpuscular volume\",\n        x =  \"Hemoglobin (mg/dl)\",\n        y = \"Mean Corpuscular Volume (fl)\")+\n    theme_bw() +\n    facet_grid(occup ~ agecat, labeller = labeller(agecat = agecat_label))\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggplot(aes(hb3, mcv3), size = 0.5) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = y~x) +\n    labs(\n        title = \"Relationship between hemoglobin and mean corpuscular volume\",\n        x =  \"Hemoglobin (mg/dl)\",\n        y = \"Mean Corpuscular Volume (fl)\")+\n    theme_bw() +\n    facet_wrap(c(\"occup\", \"agecat\"), nrow = 3, labeller = labeller(agecat = agecat_label))\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.5 Venn Diagram\n\n\nCode\ndf &lt;- \n    tibble(x=c(1,2,3), y=c(2,3.5,2), lab1 = c(\"A\",\"B\",\"C\"), counts = 1:3)\ndf %&gt;% \n    ggplot() +\n    ggforce::geom_circle(aes(x0 = x, y0 = y, r = 1.4, fill = lab1), \n                         alpha = .3, size = 1, colour = 'grey') +\n    coord_fixed() +\n    theme_void() +\n    scale_fill_manual(values = c('cornflowerblue', 'firebrick',  'gold')) +\n    scale_colour_manual(values = c('cornflowerblue', 'firebrick', 'gold'), \n                        guide = \"none\") +\n    labs(fill = NULL, title = \"My Venn Diagram I\") + \n     annotate(\"text\", \n              x = c(2, 3.5, 2.7, 1.2,   2,  2, 0.3), \n              y = c(4,   2, 2.7, 2.8, 2.5, 1.5, 1.8), \n              label = 1:7, size = 5, fontface = \"bold\") +\n    theme(plot.title = element_text(hjust = 0.5, family = \"serif\", \n                                    face = \"bold\", size = 16, colour = \"red\"),\n          legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.6 Correlation Plot\n\n\nCode\ndataF %&gt;% \n    select(hb1:hb3, hb4, hb5, hct1:hct3, hct4, hct5) %&gt;% \n    cor() %&gt;% \n    ggcorrplot::ggcorrplot(hc.order = FALSE, \n           type = \"lower\", \n           lab = TRUE, \n           lab_size = 3, \n           method=\"square\", \n           colors = c(\"tomato2\", \"white\", \"springgreen3\"), \n           title=\"Correlogram of blood indices\", \n           ggtheme=theme_bw)\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.7 Plotting Prediction Interval\n\n\nCode\ndataLM &lt;- dataF %&gt;% select(hct4, hb4)\n\nlm(hb4 ~ hct4, data = dataLM) %&gt;% \n    predict(interval = \"predict\") %&gt;% \n    as_tibble() %&gt;% \n    bind_cols(dataLM) %&gt;% \n    ggplot(aes(x = hct4, y = hb4)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = y~x, se=T)+\n    geom_line(aes(y = lwr), col = \"coral2\", linetype = \"dashed\") +\n    geom_line(aes(y = upr), col = \"coral2\", linetype = \"dashed\") +\n    labs(title = \"Relationship between HB4 and HCT4 with fillted line, prediction and se intervals\",\n         x = \"HCT 4 (%)\", y = \"HB 4 (mg/dl)\", caption = \"Nurse Data 2015\")+\n    theme_bw()\n\n\nWarning in predict.lm(., interval = \"predict\"): predictions on current data refer to _future_ responses\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.8 Color Palletes\n\n\nCode\nRColorBrewer::display.brewer.all()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    group_by(anemia1, agecat) %&gt;% \n    summarise_each(funs(Mean = mean, SD = sd, se=sd(.)/sqrt(n())), hb1:hb2) %&gt;% \n    mutate(Anemia.1 = case_when(anemia1 == 0 ~ \"No\",\n                                anemia1 == 1 ~ \"Yes\") %&gt;% as_factor()) %&gt;% \n    ggplot(aes(x=Anemia.1, y=hb1_Mean, fill = agecat)) +  \n    geom_errorbar(aes(ymin = hb1_Mean - 1.96*hb1_SD, ymax = hb1_Mean + 1.96*hb1_SD),\n                  position = position_dodge(0.9), width = 0.2, size = 0.8) + \n    geom_bar(stat = \"identity\", position = position_dodge(0.9), col = \"black\") +\n    labs(x = \"First Anemia Present\", y = \"Mean of First HgB (mg/dL)\",\n         title = \"Average initial HgB for first anemia and Age Categories\") +\n    theme_bw()+\n    scale_fill_brewer(name = \"Age Group\", palette = \"Dark2\",\n                      labels= c(\"10-19 yrs\", \"20-29 yrs\", \"30-39 yrs\", \"40-49 yrs\"))\n\n\nWarning: `summarise_each()` was deprecated in dplyr 0.7.0.\nℹ Please use `across()` instead.\n\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.9 Adding text as labels, etc\n\n\nCode\ntemp &lt;-\n    dataF %&gt;% \n    group_by(educ) %&gt;% \n    summarize(across(c(hb1, hb2, hb3, hb4, hb5), mean)) \n\ntemp.2 &lt;- tibble(x = rep(5,4), y = temp$hb5, z = temp$educ)\n    \ntemp %&gt;% \n    pivot_longer(col = hb1:hb5, names_to = \"Period\", values_to = \"hgb\") %&gt;% \n    ggplot(aes(x = Period, y = hgb)) +\n    geom_line(aes(color = educ, group = educ), size = 1)+\n    geom_point(aes(color = educ, group = educ, shape = educ), size =2)+\n    labs(title = \"Average Hemoglobin for each educational level\", x=NULL)+\n    scale_y_continuous(name = \"Hemoglobin (mg/dL)\", limits = c(10,16)) +\n    scale_x_discrete(labels = c(\"hb1\" = \"First \\nMeasure\",\n                                \"hb2\" = \"Second \\nMeasure\",\n                                \"hb3\" = \"Third \\nMeasure\",\n                                \"hb4\" = \"Fourth \\nMeasure\",\n                                \"hb5\" = \"Fifth \\nMeasure\"))+\n    ggrepel::geom_label_repel(data = temp.2, aes(x = x, y = y, label = z))+\n    theme_bw()+\n    theme(legend.position = \"none\",\n          plot.title = element_text(family=\"serif\",colour = \"red\", \n                               hjust =0.5, face = \"bold\", size=16))\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.10 Highlighting one line\n\n\n20.0.0.11 Adding text to special observations\n\n\nCode\ndataG &lt;- \n    dataF %&gt;% \n    mutate(is_outlier = (plt1&lt;50 | plt2&lt;100 | plt2&gt;400 | plt1&gt;400)) \n\ndataG %&gt;% \n    ggplot(aes(x = plt1, y = plt2, col = is_outlier)) + \n    geom_point() +\n    labs(x = \"First Platelet Count\",\n         y = \"Second Platelet Count\",\n         title = \"Relationship between first and second platelet counts showing possible outliers\")+\n    theme_bw()+\n    ggrepel::geom_label_repel(data = filter(dataG, is_outlier == TRUE), \n                              aes(label=id)) +\n    theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.12 Regression line with prediction and regression lines\n\n\nCode\ndataH &lt;- \n    readxl::read_xlsx(\n        \"C:/Dataset/Red cell indices against ferritin.xlsx\"\n        ) %&gt;% \n    mutate(\n        lg.fer = log(Ferritin), \n        MCH = ifelse(is.na(MCH), median(MCH, na.rm=T), MCH)\n        )\n\npreds &lt;- \n    rbind(\n        predict(lm(lg.fer ~ RBC, data = dataH), interval = \"prediction\"),\n        predict(lm(lg.fer ~ HGB, data = dataH), interval = \"prediction\"), \n        predict(lm(lg.fer ~ HCT, data = dataH), interval = \"prediction\"),\n        predict(lm(lg.fer ~ MCV, data = dataH), interval = \"prediction\"), \n        predict(lm(lg.fer ~ MCH, data = dataH), interval = \"prediction\")\n        ) %&gt;% \n    as_tibble()\n\ndataH %&gt;% \n    pivot_longer(cols=RBC:MCH, names_to = \"bld.ind\") %&gt;% \n    mutate(\n        bld.ind = factor(bld.ind, levels = c(\"RBC\", \"HGB\", \"HCT\", \"MCV\", \"MCH\"))\n        ) %&gt;% \n    arrange(bld.ind) %&gt;% \n    bind_cols(preds) %&gt;% \n    ggplot(aes(x = value)) + \n    geom_point(aes(y = lg.fer)) +\n    geom_smooth(aes(y = lg.fer), se=T, method = \"lm\", formula = y~x) +\n    geom_line(aes(y = upr), col = \"red\", linetype = \"dashed\") +\n    geom_line(aes(y = lwr), col = \"red\", linetype = \"dashed\") +\n    facet_wrap(vars(bld.ind), nrow = 2, scales = \"free\") +\n    labs(\n        title = \"Blood indices with prediction lines (red), regression line (blue) and regression error\",\n        y = \"Log of serum ferritin concentration\",\n        x = NULL)\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.13 Follow-up plot - Highly Customised\n\n\nCode\ndataF %&gt;% \n    select(id, contains(\"mcv\")) %&gt;% \n    arrange() %&gt;% \n    pivot_longer(cols = c(mcv1:mcv5)) %&gt;% \n    mutate(tms = unclass(factor(name))) %&gt;% \n    ggplot(aes(x = tms, y = value, group = id, color = avemcv)) +\n    geom_line() +\n    labs(x = NULL, \n         title = \"Variations Of MCV Over The Five Review Periods\") +\n    scale_x_continuous(breaks = c(1:5), \n                       limits = c(1,5),\n                       labels = c(\"First\",\"Second\", \"Third\", \"Fourth\", \"Fifth\"))+\n    scale_y_continuous(name= \"Mean Corposcular Hemoglobin (fl) Measurement\",\n                       breaks = seq(50, 140, 10)) +\n    scale_color_viridis_c(breaks = seq(50, 140, 10)) +\n    theme(\n        plot.background = element_rect(fill = \"black\", colour = \"black\"),\n        panel.background = element_rect(fill = \"black\", color = \"grey\"),\n        panel.grid = element_blank(),\n        axis.text = element_text(colour = \"grey\", face = \"bold\", family = \"serif\"),\n        axis.ticks = element_line(colour = \"grey\"),\n        axis.title = element_text(colour = \"grey\", face = \"bold\", family = \"serif\"),\n        plot.title = element_text(colour = \"grey\",hjust = 0.5, face = \"bold\", family = \"serif\"),\n        legend.background = element_rect(fill = \"black\", colour = \"grey\"),\n        legend.title = element_blank(),\n        legend.text = element_text(colour = \"grey\", face = \"bold\", family = \"serif\"),\n        legend.key.height = unit(0.64, \"in\")\n    )\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.14 Barchart with CIs\n\n\nCode\ndataF %&gt;% \n    mutate(avehb_cat = case_when(avehb &lt; median(avehb) ~ \"Low HB\",\n                                 avehb &gt;= median(avehb) ~ \"High HB\") %&gt;% \n               factor(levels = c(\"Low HB\", \"High HB\"))) %&gt;% \n    select(starts_with(\"mcv\"), avehb_cat) %&gt;% \n    pivot_longer(cols = c(mcv1:mcv5), values_to = \"mcv\", names_to = \"measure\") %&gt;% \n    group_by(avehb_cat, measure) %&gt;% \n    mutate(mean_mcv = mean(mcv), \n           low_mcv = mean_mcv - 1.96*sd(mcv)/sqrt(n()),\n           high_mcv = mean_mcv + 1.96*sd(mcv)/sqrt(n())) %&gt;% \n    ggplot(aes(y = mean_mcv, x = measure, fill = avehb_cat)) +\n    geom_bar(stat = \"identity\", position = position_dodge(0.9)) +\n    geom_errorbar(aes(ymin = low_mcv, ymax = high_mcv), size = 0.8, \n                  width = 0.3, \n                  position = position_dodge(0.9)) +\n    labs(y = \"Mean Corpuscular Volume\",\n         x = NULL,\n         title = \"Variation in MCV per review period (95%CI)\",\n         caption = \"Source: Data One\")+\n    scale_fill_manual(name = \"HGB Status\", values = c(\"grey\", \"grey45\"))+\n    scale_x_discrete(labels = toupper(c(\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth\")))+\n    scale_y_continuous(limits = c(0,130), breaks = seq(0, 130, 10))+\n    theme(\n        panel.background = element_rect(colour = \"black\", fill = \"white\"),\n        plot.background  = element_rect(fill = \"grey\"),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, family = \"serif\"),\n        axis.text = element_text(face = \"bold\", family = \"serif\"),\n        axis.title = element_text(family = \"serif\", face = \"bold\"),\n        plot.caption = element_text(family = \"serif\", face = \"bold\"),\n        legend.text = element_text(family = \"serif\", face = \"bold\"),\n        legend.title = element_text(family = \"serif\", face = \"bold\")\n        )\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.15 Lollipop Plot\n\n\nCode\ndataF %&gt;% \n    summarize(across(contains(c(\"mcv\",\"hb\", \"wbc\", \"mch\")),mean)) %&gt;% \n    pivot_longer(cols = mcv1:avemchc) %&gt;% \n    filter(!(name %in% c(\"avemcv\",\"avehb\", \"avewbc\", \"avemch\", \"avemchc\"))) %&gt;%\n    mutate(name2 = str_extract(name, \"^\\\\D*\"),\n           name = toupper(name)) %&gt;% \n    ggplot(aes(x = name, y = value, color = name2))+\n    geom_segment(aes(xend = name, yend = 0), show.legend = F) +\n    geom_point(size = 6, show.legend = F) +\n    geom_text(aes(label = round(value, 1)), col = \"black\", size =2)+\n    labs(title = \"Blood indices variability for each review period\",\n         y = \"Value\",\n         x = NULL)+\n    theme_light() +\n    theme(\n        axis.text.x = element_text(angle = 90),\n        plot.title  = element_text(hjust = 0.5, face = \"bold\")\n    )\n\n\n\n\n\n\n\n\n\n\n\n20.0.0.16 Plots from the ggstatsplot package\n\n\nCode\ndataF %&gt;% \n    select(hb1, fpreg) %&gt;% \n    mutate(hb1 = round(hb1, 1)) %&gt;% \n    na.omit() %&gt;% \n    ggbetweenstats(\n      y=hb1, x=fpreg, \n      ggtheme = theme_light(),\n      bf.prior = F, \n      xlab = \"First Pregnancy\",\n      ylab = \"Hemoglobin\",\n      title = \"Relationship between first pregnancy and hemoglobin\",\n      outlier.tagging = T,\n      outlier.color = \"red\",\n      outlier.shape = 18)\n\n\nError in integrate(meta.t.like, lower = (lower - mean.delta)/scale.delta,  : \n  non-finite function value\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggscatterstats(x = mcv1, y = mcv2, ggtheme = theme_light())\n\n\nRegistered S3 method overwritten by 'ggside':\n  method from  \n  +.gg   GGally\n\n\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    ggbarstats(y = educ, x = fpreg, \n               ggtheme = theme_light(),\n               legend.title = \"First \\nPregnancy\",\n               xlab = \"Educational Level\",\n               bf.message = F,\n               title = \"Relationship between educational level and first pregnancy\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n  gghistostats(\n    x = hb1,\n    ggtheme = theme_classic(), \n    normal.curve = T, \n    binwidth = 1,\n    normal.curve.args = list(size = 1, col = \"red\"),\n    bin.args = list(color = \"black\", fill = \"blue\", alpha = 0.1),\n    xlab = \"Hemoglobin\", \n    title = \"Distribution of First Hemoglobins\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nlm(hb1 ~ hb2 + hb3 + hb4 + hb5, data=dataF) %&gt;% \n    ggcoefstats(output = \"plot\",\n                exclude.intercept = T, \n                ggtheme = theme_light(), \n                color = \"red\") +\n    labs(y = \"Covariates\", \n         x = \"Estimates\", \n         title = \"Distribution of coefficient estimates (95% CI)\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataF %&gt;% \n    select(hb1, hb1, hb3, hb4, hb5, mcv1, mcv2, mcv3, mcv4, mcv5) %&gt;% \n    ggcorrmat(colors = c(\"red\",\"white\",\"blue\"), \n              ggtheme = theme_bw(),\n              matrix.type = \"lower\")\n\n\n\n\n\n\n\n\n\n\n\n21 Plots with Dates\n\n\nCode\ndataF %&gt;%\n    mutate(mari = fct_collapse(mari, \n                             \"Married\" = c(\"Married\",\"Cohabiting\"),\n                             \"Single\" = c(\"Widowed\", \"Divorced\"))) %&gt;% \n    ggplot()+\n    geom_point(aes(x = avehb, y = avehct, color = mari), show.legend = F) +\n    geom_smooth(aes(x = avehb, y = avehct), se=F, formula = y~x, \n                method = \"lm\", size = 1, alpha = .5, col = \"grey\")+\n    facet_wrap(~mari, nrow = 2, strip.position = \"left\") +\n    labs(y = \"Hematocrit (%)\", x = \"Hemoglobin (g/dl)\", \n         title = str_glue(\"Relationship between Blood hemoglobin and \",\n                          \"Hematocrit stratified by marital status\"))+\n    theme(panel.background = element_blank(),\n          panel.grid = element_blank(),\n          axis.line = element_line(),\n          strip.placement = \"outside\",\n          strip.background = element_rect(fill = \"#c1d3fe\", color = \"black\"),\n          strip.text = element_text(size = 10, face = \"bold\"),\n          text = element_text(family = \"serif\"),\n          axis.text = element_text(size = 10, face = \"bold\"),\n          axis.title = element_text(size = 10, face = \"bold.italic\"),\n          plot.title = element_text(face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n21.0.0.1 Drawing free lines with legend\n\n\nCode\ndataF %&gt;% \n    mutate(hct3 = ifelse(hct3 &lt; 20, hct3 +40, hct3),\n           hct3 = ifelse(hct3 &gt; 60, hct3 - 20, hct3)) %&gt;% \n    ggplot(aes(x = hct3, y = hb3)) +\n    geom_point(color = \"grey45\") +\n    geom_smooth(aes(x = hct3, y = hb3, col =  \"Observed\"), \n                formula = y~x, method = \"lm\", se = F) + \n    geom_segment(aes(x = min(hct3), y = min(hct3/3), \n                     xend = max(hct3), yend = max(hct3/3), \n                     col =  \"Expected\"))+\n    labs(title = \"Relationship between the third HB and HCT measurements\",\n         subtitle = \"Comparison of observed  and expected regression line if HCT = 3*HB\",\n         x = \"Hematocrit (%)\", y = \"Hemoglobin (mg/dl)\", \n         color = \"Regression Line\") +\n    theme_classic()+\n    theme(plot.title = element_text(face = \"bold\"),\n          plot.subtitle = element_text(face = \"italic\"))\n\n\nWarning in geom_segment(aes(x = min(hct3), y = min(hct3/3), xend = max(hct3), : All aesthetics have length 1, but the data has 350 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.",
    "crumbs": [
      "<span style='font-weight:bold; color: black;'>Graphics</span>",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Miscellaneous</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Wang, Xiaofeng, and Xinge Ji. 2020. “Sample Size Estimation in\nClinical Research.” Chest 158 (1): S12–20. https://doi.org/10.1016/j.chest.2020.03.010.",
    "crumbs": [
      "References"
    ]
  }
]